mads 2.1.5
Source: MIDICar Player.a65
     1 				; ------------------------------------------------------------
     2 				; Mad Pascal Compiler version 1.6.6 [2022/03/17] for 6502
     3 				; ------------------------------------------------------------
     4
     5 = 0010			STACKWIDTH	= 16
     6 = 2000			CODEORIGIN	= $2000
     7
     8 = 0001			TRUE		= 1
     9 = 0000			FALSE		= 0
    10
    11 				; ------------------------------------------------------------
    12
    13 					org $80
    14
    15 				zpage
    16
    17 				.ifdef @vbxe_detect
    18 				fxptr	.ds 2						; VBXE pointer
    19 				.fi
    20
    21 				.if .def(@AllocMem)||.def(MAIN.SYSTEM.GETMEM)||.def(MAIN.SYSTEM.FREEMEM)
    22 				psptr	.ds 2						; PROGRAMSTACK Pointer
    23 				.fi
    24
    25 = 0080			bp	.ds 2
    26 = 0082			bp2	.ds 2
    27
    28 = 0084			eax	.ds 4						;8 bytes (aex + edx) -> divREAL
    29 = 0088			edx	.ds 4
    30 = 008C			ecx	.ds 4
    31
    32 				TMP
    33 				ztmp
    34 = 0090			ztmp8	.ds 1
    35 = 0091			ztmp9	.ds 1
    36 = 0092			ztmp10	.ds 1
    37 = 0093			ztmp11	.ds 1
    38
    39 = 0094			STACKORIGIN	.ds STACKWIDTH*4
    40 				zpend
    41
    42 				; ------------------------------------------------------------
    43
    44 = 0084			ax	= eax
    45 = 0084			al	= eax
    46 = 0085			ah	= eax+1
    47
    48 = 008C			cx	= ecx
    49 = 008C			cl	= ecx
    50 = 008D			ch	= ecx+1
    51
    52 = 0088			dx	= edx
    53 = 0088			dl	= edx
    54 = 0089			dh	= edx+1
    55
    56 					org eax
    57
    58 = 0084			FP1MAN0	.ds 1
    59 = 0085			FP1MAN1	.ds 1
    60 = 0086			FP1MAN2	.ds 1
    61 = 0087			FP1MAN3	.ds 1
    62
    63 					org ztmp8
    64
    65 = 0090			FP1SGN	.ds 1
    66 = 0091			FP1EXP	.ds 1
    67
    68 					org edx
    69
    70 = 0088			FP2MAN0	.ds 1
    71 = 0089			FP2MAN1	.ds 1
    72 = 008A			FP2MAN2	.ds 1
    73 = 008B			FP2MAN3	.ds 1
    74
    75 					org ztmp10
    76
    77 = 0092			FP2SGN	.ds 1
    78 = 0093			FP2EXP	.ds 1
    79
    80 					org ecx
    81
    82 = 008C			FPMAN0	.ds 1
    83 = 008D			FPMAN1	.ds 1
    84 = 008E			FPMAN2	.ds 1
    85 = 008F			FPMAN3	.ds 1
    86
    87 					org bp2
    88
    89 = 0082			FPSGN	.ds 1
    90 = 0083			FPEXP	.ds 1
    91
    92 					.ifdef MAIN.@DEFINES.BASICOFF
    93 					org CODEORIGIN
    94 					icl 'atari\basicoff.asm'
    95 					ini CODEORIGIN
    96 					.fi
    97
    98 					.ifdef MAIN.@DEFINES.S_VBXE
    99 					opt h-
   100 					ins 'atari\s_vbxe\sdxld2.obx'
   101 					opt h+
   102 					.fi
   103
   104 				; ------------------------------------------------------------
   105
   106 					org CODEORIGIN
   107
   108 2000				STATICDATA
Macro: STATICDATA [Source: MIDICar Player.a65]
     1 FFFF> 2000-385A> 0A 4F + .by  $0A $4F $70 $65 $6E $20 $66 $69  $6C $65 $20 $00 $0B $49 $2F $4F  $20 $45 $72 $72 $6F $72 $20 $23
     2 2018 00 07 54 72 61 63 + .by  $00 $07 $54 $72 $61 $63 $6B $3A  $20 $00 $03 $2E $2E $2E $00 $0F  $44 $32 $3A $53 $45 $4C $46 $54
     3 2030 45 53 54 2E 4D 49 + .by  $45 $53 $54 $2E $4D $49 $44 $00
Source: MIDICar Player.a65
   109
   110 				; ------------------------------------------------------------
   111
   112 2038			RTLIB
   113 2038				icl 'rtl6502_a8.asm'
Source: rtl6502_a8.asm
    78 					opt l+
   114
   115 				.print 'ZPAGE: ',zpage,'..',zpend-1
   115 				ZPAGE: $0080..$00D3
   116
   117 				.print 'RTLIB: ',RTLIB,'..',*-1
   117 				RTLIB: $2038..$2AFD
   118
   119 				; ------------------------------------------------------------
   120
   121 2AFE			START
   122 2AFE BA				tsx
   123 2AFF 8E 46 38			stx MAIN.@halt+1
   124
   125 					.ifdef fmulinit
   126 					fmulinit
   127 					.fi
   128
   129 = 01D9			VLEN	= VARDATASIZE-VARINITSIZE
   130 = 3862			VADR	= DATAORIGIN+VARINITSIZE
   131
   132 					ift VADR > $BFFF
   133 					ert 'Invalid memory address range ',VADR
   134 					eli (VLEN>0) && (VLEN<=256)
   135 					ldx #256-VLEN
   136 					lda #$00
   137 					sta:rne VADR+VLEN-256,x+
   138 					eli VLEN>256
   139 					@fill #VADR #VLEN #$00
   139 				 MWA #VADR @FILL.PTR1\ MWA #VLEN @FILL.PTR3\ MVA #$00 @FILL.PTR2\ JSR @FILL
   139 2B02 A9 62 85 88 A9 38 +  MWA #VADR @FILL.PTR1
   139 2B0A A9 D9 85 8C A9 01 +  MWA #VLEN @FILL.PTR3
   139 2B12 A9 00 85 84		 MVA #$00 @FILL.PTR2
   139 2B16 20 B8 23		 JSR @FILL
   140 					eif
   141
   142 				.ifdef :psptr
   143 					mwa #PROGRAMSTACK :psptr
   144 				.fi
   145
   146 					.ifdef MAIN.@DEFINES.ROMOFF
   147 					icl 'atari\romoff.asm'
   148 					.fi
   149
   150 2B19 A2 0F			ldx #$0F					; DOS II+/D ParamStr
   151 2B1B BD 40 03 9D 4B 38 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   152
   153 2B24 E8				inx						; X = 0
   154 2B25 86 80			stx bp						; BP = 0
   155
   156 2B27 8E 0F D2			stx skctl					; reset POKEY
   157 2B2A A9 03			lda #3
   158 2B2C 8D 0F D2			sta skctl
   159
   160 2B2F CA				dex						; X = 255
   161
   162 2B30				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: MIDICar Player.a65]
    11 2B30 20 0A 36			jsr MAIN.MIDFILES.@UnitInit
Source: MIDICar Player.a65
   163
   164 2B33			.local	MAIN						; PROCEDURE
   165
   166 2B33 4C 45 36			jmp l_003F
   167
   168 				; ------------------------------------------------------------
   169
   170 2B36			.local	SYSTEM						; UNIT
   171
   172 2B36			.local	FILEPOS						; FUNCTION | ASSEMBLER
   173
   174 				; -------------------  ASM Block 00000011  -------------------
   175
   176 2B36 8A 48			txa:pha
   177
   178 2B38 AD 67 38 85 82 AD + 	mwa f :bp2
   179
   180 2B42 A0 04			ldy #s@file.chanel
   181 2B44 B1 82			lda (:bp2),y
   182 2B46 AA				tax
   183 2B47 A9 26			lda #38
   184 2B49 9D 42 03			sta iccmd,x
   185
   186 2B4C				m@call	ciov
Macro: M@CALL [Source: macros.asm]
    12 2B4C 20 56 E4				jsr CIOV
Source: MIDICar Player.a65
   187
   188 2B4F 8C 63 38			sty IOResult
   189
   190 2B52 BD 4C 03 85 84		mva icax3,x :eax
   191 2B57 BD 4D 03 85 85		mva icax4,x :eax+1
   192 2B5C BD 4E 03 85 86		mva icax5,x :eax+2
   193
   194 2B61 A9 00 85 87			mva #$00 :eax+3
   195 2B65 85 8E			sta :ecx+2
   196 2B67 85 8F			sta :ecx+3
   197
   198 2B69 A0 02			ldy #s@file.record
   199 2B6B B1 82			lda (:bp2),y
   200 2B6D 85 8C			sta :ecx
   201 2B6F C8				iny
   202 2B70 B1 82			lda (:bp2),y
   203 2B72 85 8D			sta :ecx+1
   204
   205 2B74 20 06 25			jsr idivEAX_ECX.main
   206
   207 2B77 A5 84 8D 69 38		mva :eax Result
   208 2B7C A5 85 8D 6A 38		mva :eax+1 Result+1
   209 2B81 A5 86 8D 6B 38		mva :eax+2 Result+2
   210 2B86 A5 87 8D 6C 38		mva :eax+3 Result+3
   211
   212 2B8B 68 AA			pla:tax
   213
   214 2B8D			@exit
   215
   216 				; ------------------------------------------------------------
   217
   218 = 3867			F	= DATAORIGIN+$000B
   219 = 3869			RESULT	= DATAORIGIN+$000D
   220
   221 = 3867			@VarData	= F
   222 = 0002			@VarDataSize	= 2
   223
   224 2B8D 60				rts						; ret
   225 				.endl
   226
   227 2B8E			.local	SEEK						; PROCEDURE | ASSEMBLER
   228
   229 				; -------------------  ASM Block 00000012  -------------------
   230
   231 2B8E 8A 48			txa:pha
   232
   233 2B90 AD 6D 38 85 82 AD + 	mwa f :bp2
   234
   235 2B9A A0 04			ldy #s@file.chanel
   236 2B9C B1 82			lda (:bp2),y
   237 2B9E AA				tax
   238 2B9F A9 25			lda #37
   239 2BA1 9D 42 03			sta iccmd,x
   240
   241 2BA4 A0 02			ldy #s@file.record
   242 2BA6 B1 82			lda (:bp2),y
   243 2BA8 85 84			sta :eax
   244 2BAA C8				iny
   245 2BAB B1 82			lda (:bp2),y
   246 2BAD 85 85			sta :eax+1
   247 2BAF A9 00			lda #$00
   248 2BB1 85 86			sta :eax+2
   249 2BB3 85 87			sta :eax+3
   250
   251 2BB5 AD 6F 38 85 8C		mva a :ecx
   252 2BBA AD 70 38 85 8D		mva a+1 :ecx+1
   253 2BBF AD 71 38 85 8E		mva a+2 :ecx+2
   254 2BC4 AD 72 38 85 8F		mva a+3 :ecx+3
   255
   256 2BC9 20 BA 24			jsr imulECX
   257
   258 2BCC A5 84 9D 4C 03		mva :eax icax3,x
   259 2BD1 A5 85 9D 4D 03		mva :eax+1 icax4,x
   260 2BD6 A5 86 9D 4E 03		mva :eax+2 icax5,x
   261
   262 2BDB				m@call	ciov
Macro: M@CALL [Source: macros.asm]
    12 2BDB 20 56 E4				jsr CIOV
Source: MIDICar Player.a65
   263
   264 2BDE 8C 63 38			sty IOResult
   265
   266 2BE1 68 AA			pla:tax
   267
   268 				; ------------------------------------------------------------
   269
   270 = 386D			F	= DATAORIGIN+$0011
   271 = 386F			A	= DATAORIGIN+$0013
   272
   273 = 386D			@VarData	= F
   274 = 0006			@VarDataSize	= 6
   275
   276 2BE3			@exit
   277 					.ifdef @new
   278 					lda <@VarData
   279 					sta :ztmp
   280 					lda >@VarData
   281 					ldy #@VarDataSize-1
   282 					jmp @FreeMem
   283 					els
   284 2BE3 60				rts						; ret
   285 					eif
   286 				.endl
   287
   288 2BE4			.local	EOF						; FUNCTION
   289
   290 				; optimize OK (SYSTEM), line = 1151
   291
   292 2BE4 AD 73 38			lda F
   293 2BE7 8D 67 38			sta FILEPOS.F
   294 2BEA AD 74 38			lda F+1
   295 2BED 8D 68 38			sta FILEPOS.F+1
   296 2BF0 20 36 2B			jsr FILEPOS
   297 2BF3 AD 69 38			lda FILEPOS.RESULT
   298 2BF6 8D 76 38			sta I
   299 2BF9 AD 6A 38			lda FILEPOS.RESULT+1
   300 2BFC 8D 77 38			sta I+1
   301 2BFF AD 6B 38			lda FILEPOS.RESULT+2
   302 2C02 8D 78 38			sta I+2
   303 2C05 AD 6C 38			lda FILEPOS.RESULT+3
   304 2C08 8D 79 38			sta I+3
   305 				; BlockRead
   306
   307 				; optimize OK (SYSTEM), line = 1153
   308
   309 2C0B AC 73 38 84 82 AC + 	mwy F :bp2
   310 2C15 A0 06			ldy #s@file.buffer
   311 2C17 AD 78 2C			lda BF
   312 2C1A 91 82			sta (:bp2),y
   313 2C1C C8				iny
   314 2C1D AD 79 2C			lda BF+1
   315 2C20 91 82			sta (:bp2),y
   316 2C22 A0 08			ldy #s@file.nrecord
   317 2C24 A9 01			lda #$01
   318 2C26 91 82			sta (:bp2),y
   319 2C28 C8				iny
   320 2C29 A9 00			lda #$00
   321 2C2B 91 82			sta (:bp2),y
   322
   323 2C2D 8A 48			txa:pha
   324 2C2F 38				sec
   325 					@readfile F, #7
   325 				 LDY F+1\ LDA F\ LDX# 7\ JSR @READFILE
   325 2C30 AC 74 38		 LDY F+1
   325 2C33 AD 73 38		 LDA F
   325 2C36 A2 07		 LDX# 7
   325 2C38 20 FB 20		 JSR @READFILE
   326 2C3B 68 AA			pla:tax
   327
   328 				; optimize OK (SYSTEM), line = 1155
   329
   330 2C3D AD 73 38			lda F
   331 2C40 8D 6D 38			sta SEEK.F
   332 2C43 AD 74 38			lda F+1
   333 2C46 8D 6E 38			sta SEEK.F+1
   334 2C49 AD 76 38			lda I
   335 2C4C 8D 6F 38			sta SEEK.A
   336 2C4F AD 77 38			lda I+1
   337 2C52 8D 70 38			sta SEEK.A+1
   338 2C55 AD 78 38			lda I+2
   339 2C58 8D 71 38			sta SEEK.A+2
   340 2C5B AD 79 38			lda I+3
   341 2C5E 8D 72 38			sta SEEK.A+3
   342 2C61 20 8E 2B			jsr SEEK
   343
   344 				; -------------------  ASM Block 00000013  -------------------
   345
   346 2C64 AD 73 38 85 82 AD + 	mwa f :bp2
   347
   348 2C6E A0 05			ldy #s@file.status
   349 2C70 B1 82			lda (:bp2),y
   350 2C72 29 01			and #e@file.eof
   351 2C74 8D 75 38			sta Result
   352
   353 2C77			@exit
   354
   355 				; ------------------------------------------------------------
   356
   357 = 3873			F	= DATAORIGIN+$0017
   358 = 3875			RESULT	= DATAORIGIN+$0019
   359 = 3876			I	= DATAORIGIN+$001A
   360 = 387A			adr.BF	= [DATAORIGIN+$001E] .array [256]
   361 2C77			.var BF	= adr.BF .word
   362
   363 = 3873			@VarData	= F
   364 = 0106			@VarDataSize	= 262
   365
   366 2C77 60				rts						; ret
   367 = 2C78 7A 38		BF
   367 				.endl
   368
   369 2C7A			.local	PARAMCOUNT					; FUNCTION | ASSEMBLER
   370
   371 				; -------------------  ASM Block 00000044  -------------------
   372
   373 					@cmdline #255
   373 				 LDA# 255\ JSR @CMDLINE
   373 2C7A A9 FF		 LDA# 255
   373 2C7C 20 BD 21		 JSR @CMDLINE
   374 2C7F 8D 7A 39			sta Result
   375
   376 2C82			@exit
   377
   378 				; ------------------------------------------------------------
   379
   380 = 397A			RESULT	= DATAORIGIN+$011E
   381 2C82 60				rts						; ret
   382 				.endl
   383
   384 2C83			.local	PARAMSTR					; FUNCTION | ASSEMBLER
   385 2C83 8D 7B 39			sta I
   386
   387 				; -------------------  ASM Block 00000045  -------------------
   388
   389 					@cmdline i
   389 				 LDA I\ JSR @CMDLINE
   389 2C86 AD 7B 39		 LDA I
   389 2C89 20 BD 21		 JSR @CMDLINE
   390
   391 				;	@move #@buf Result #33
   392 2C8C A0 DF			ldy #256-33
   393 2C8E B9 21 03 99 9D 38 + 	mva:rne @buf+33-256,y adr.Result+33-256,y+
   394
   395 2C97			@exit
   396
   397 				; ------------------------------------------------------------
   398
   399 = 397B			I	= DATAORIGIN+$011F
   400 = 397C			adr.RESULT	= [DATAORIGIN+$0120] .array [33]
   401 2C97			.var RESULT	= adr.RESULT .word
   402
   403 = 397B			@VarData	= I
   404 = 0022			@VarDataSize	= 34
   405
   406 2C97 60				rts						; ret
   407 = 2C98 7C 39		RESULT
   407 				.endl
   408
   409 				; ------------------------------------------------------------
   410
   411 = 0101			__PORTB_BANKS	= $0101
   412 = 0648			M_PI_2	= $0648
   413 = 0192			D_PI_2	= $0192
   414 = 0004			D_PI_180	= $04
   415 = 0000			MGTIA	= $00
   416 = 0080			MVBXE	= $80
   417 = 0000			VBXE_XDLADR	= $00
   418 = 0100			VBXE_BCBADR	= $0100
   419 = 1000			VBXE_MAPADR	= $1000
   420 = 1000			VBXE_CHBASE	= $1000
   421 = 5000			VBXE_OVRADR	= $5000
   422 = B000			VBXE_WINDOW	= $B000
   423 = 0000			IDLI	= $00
   424 = 0001			IVBL	= $01
   425 = 0002			ITIM1	= $02
   426 = 0003			ITIM2	= $03
   427 = 0004			ITIM4	= $04
   428 = 00FE			CH_DELCHR	= $FE
   429 = 009B			CH_ENTER	= $9B
   430 = 001B			CH_ESC	= $1B
   431 = 001C			CH_CURS_UP	= $1C
   432 = 001D			CH_CURS_DOWN	= $1D
   433 = 001E			CH_CURS_LEFT	= $1E
   434 = 001F			CH_CURS_RIGHT	= $1F
   435 = 007F			CH_TAB	= $7F
   436 = 009B			CH_EOL	= $9B
   437 = 007D			CH_CLR	= $7D
   438 = 00FD			CH_BELL	= $FD
   439 = 007E			CH_DEL	= $7E
   440 = 009C			CH_DELLINE	= $9C
   441 = 009D			CH_INSLINE	= $9D
   442 = 0000			COLOR_BLACK	= $00
   443 = 000E			COLOR_WHITE	= $0E
   444 = 0032			COLOR_RED	= $32
   445 = 0096			COLOR_CYAN	= $96
   446 = 0068			COLOR_VIOLET	= $68
   447 = 00C4			COLOR_GREEN	= $C4
   448 = 0074			COLOR_BLUE	= $74
   449 = 00EE			COLOR_YELLOW	= $EE
   450 = 0028			COLOR_ORANGE	= $28
   451 = 00E4			COLOR_BROWN	= $E4
   452 = 003C			COLOR_LIGHTRED	= $3C
   453 = 0004			COLOR_GRAY1	= $04
   454 = 0006			COLOR_GRAY2	= $06
   455 = 000A			COLOR_GRAY3	= $0A
   456 = 00CC			COLOR_LIGHTGREEN	= $CC
   457 = 007C			COLOR_LIGHTBLUE	= $7C
   458 = 0004			FMOPENREAD	= $04
   459 = 0008			FMOPENWRITE	= $08
   460 = 0009			FMOPENAPPEND	= $09
   461 = 000C			FMOPENREADWRITE	= $0C
   462 = 385C			SCREENWIDTH	= DATAORIGIN+$0000
   463 = 385E			SCREENHEIGHT	= DATAORIGIN+$0002
   464 = 3860			DATESEPARATOR	= DATAORIGIN+$0004
   465 = D20A			RND	= $D20A
   466 = 02C0			adr.PALETTE	= $02C0
   467 2C9A			.var PALETTE	= adr.PALETTE .word
   468 = D012			adr.HPALETTE	= $D012
   469 2C9A			.var HPALETTE	= adr.HPALETTE .word
   470 = 3861			FILEMODE	= DATAORIGIN+$0005
   471 = 3862			GRAPHMODE	= DATAORIGIN+$0006
   472 = 3863			IORESULT	= DATAORIGIN+$0007
   473 = 3864			EOLN	= DATAORIGIN+$0008
   474 = 3865			RNDSEED	= DATAORIGIN+$0009
   475
   476 = 2C9A C0 02		PALETTE
   476 = 2C9C 12 D0		HPALETTE
   476 				.endl							; UNIT SYSTEM
   477
   478 				; ------------------------------------------------------------
   479
   480 2C9E			.local	MC6850						; UNIT
   481
   482 2C9E			.local	MC6850_RESET					; PROCEDURE
   483
   484 				; optimize OK (MC6850), line = 68
   485
   486 2C9E A9 03			lda #$03
   487 2CA0 8D 00 D5			sta MC6850_CNTRREG
   488 2CA3			@exit
   489 					.ifdef @new
   490 					lda <@VarData
   491 					sta :ztmp
   492 					lda >@VarData
   493 					ldy #@VarDataSize-1
   494 					jmp @FreeMem
   495 					els
   496 2CA3 60				rts						; ret
   497 					eif
   498 				.endl
   499
   500 2CA4			.local	MC6850_INIT					; PROCEDURE
   501 2CA4 8D 9D 39			sta SETUP
   502
   503 				; optimize OK (MC6850), line = 73
   504
   505 2CA7 8D 00 D5			sta MC6850_CNTRREG
   506
   507 				; ------------------------------------------------------------
   508
   509 = 399D			SETUP	= DATAORIGIN+$0141
   510
   511 = 399D			@VarData	= SETUP
   512 = 0001			@VarDataSize	= 1
   513
   514 2CAA			@exit
   515 					.ifdef @new
   516 					lda <@VarData
   517 					sta :ztmp
   518 					lda >@VarData
   519 					ldy #@VarDataSize-1
   520 					jmp @FreeMem
   521 					els
   522 2CAA 60				rts						; ret
   523 					eif
   524 				.endl
   525
   526 2CAB			.local	MC6850_SEND					; PROCEDURE
   527 2CAB 8D 9E 39			sta DATA
   528
   529 				; --- RepeatUntilProlog
   530 2CAE			l_00D6
   531
   532 				; optimize OK (MC6850), line = 84
   533
   534 2CAE AD 00 D5			lda MC6850_CNTRREG
   535 2CB1 29 02			and #$02
   536 2CB3 F0 F9			jeq l_00D6
   537
   538 				; optimize OK (MC6850), line = 85
   539
   540 2CB5 AD 9E 39			lda DATA
   541 2CB8 8D 01 D5			sta MC6850_BUFFER
   542
   543 				; ------------------------------------------------------------
   544
   545 = 399E			DATA	= DATAORIGIN+$0142
   546
   547 = 399E			@VarData	= DATA
   548 = 0001			@VarDataSize	= 1
   549
   550 2CBB			@exit
   551 					.ifdef @new
   552 					lda <@VarData
   553 					sta :ztmp
   554 					lda >@VarData
   555 					ldy #@VarDataSize-1
   556 					jmp @FreeMem
   557 					els
   558 2CBB 60				rts						; ret
   559 					eif
   560 				.endl
   561
   562 				; ------------------------------------------------------------
   563
   564 = D500			MC6850_BASE	= $D500
   565 = D500			ADDR_MC6850_CNTRREG	= $D500
   566 = D501			ADDR_MC6850_BUFFER	= $D501
   567 = D500			ADDR_MC6850_STATREG	= $D500
   568 = 0001			CR0	= $01
   569 = 0002			CR1	= $02
   570 = 0004			CR2	= $04
   571 = 0008			CR3	= $08
   572 = 0010			CR4	= $10
   573 = 0020			CR5	= $20
   574 = 0040			CR6	= $40
   575 = 0080			CR7	= $80
   576 = 0000			CD_1	= $00
   577 = 0001			CD_16	= $01
   578 = 0002			CD_64	= $02
   579 = 0003			MASTERRESET	= $03
   580 = 0000			WS_7BITS	= $00
   581 = 0010			WS_8BITS	= $10
   582 = 0000			WS_2BITSTOP	= $00
   583 = 0008			WS_1BITSTOP	= $08
   584 = 0000			WS_EVENPARITY	= $00
   585 = 0004			WS_ODDPARITY	= $04
   586 = 0000			TC_RTSLOW_NOTIRQ	= $00
   587 = 0020			TC_RTSLOW_TIRQ	= $20
   588 = 0040			TC_RTSHIGH_NOTIRQ	= $40
   589 = 0060			TC_BREAKLEVEL	= $60
   590 = 0000			NOIRQ_RECEIVE	= $00
   591 = 0080			IRQ_RECEIVE	= $80
   592 = 0001			RDRF	= $01
   593 = 0002			TDRE	= $02
   594 = 0004			DCD	= $04
   595 = 0008			CTS	= $08
   596 = 0010			FE	= $10
   597 = 0020			OVRN	= $20
   598 = 0040			PE	= $40
   599 = 0080			IRQ	= $80
   600 = D500			MC6850_CNTRREG	= $D500
   601 = D501			MC6850_BUFFER	= $D501
   602 = D500			MC6850_STATREG	= $D500
   603
   604 				.endl							; UNIT MC6850
   605
   606 				; ------------------------------------------------------------
   607
   608 2CBC			.local	MIDFILES					; UNIT
   609
   610 2CBC			.local	WORDBI						; FUNCTION
   611
   612 				; optimize OK (MIDFILES), line = 68
   613
   614 2CBC A9 C1			lda <RESULT
   615 2CBE 8D C3 39			sta RESULTPTR
   616 2CC1 A9 39			lda >RESULT
   617 2CC3 8D C4 39			sta RESULTPTR+1
   618
   619 				; optimize OK (MIDFILES), line = 69
   620
   621 2CC6 AC BF 39 84 82 AC + 	mwy BI :bp2
   622 2CD0 A0 01			ldy #$01
   623 2CD2 B1 82			lda (:bp2),y
   624 2CD4 AC C4 39 84 81		mvy RESULTPTR+1 :bp+1
   625 2CD9 AC C3 39			ldy RESULTPTR
   626 2CDC 91 80			sta (:bp),y
   627 2CDE EE C3 39			inc RESULTPTR
   628 2CE1 D0 03			sne
   629 2CE3 EE C4 39			inc RESULTPTR+1
   630
   631 				; optimize OK (MIDFILES), line = 70
   632
   633 2CE6 A0 00			ldy #$00
   634 2CE8 B1 82			lda (:bp2),y
   635 2CEA AC C4 39 84 81		mvy RESULTPTR+1 :bp+1
   636 2CEF AC C3 39			ldy RESULTPTR
   637 2CF2 91 80			sta (:bp),y
   638 2CF4			@exit
   639
   640 				; ------------------------------------------------------------
   641
   642 = 39BF			BI	= DATAORIGIN+$0163
   643 = 39C1			RESULT	= DATAORIGIN+$0165
   644 = 39C3			RESULTPTR	= DATAORIGIN+$0167
   645
   646 = 39BF			@VarData	= BI
   647 = 0004			@VarDataSize	= 4
   648
   649 2CF4 60				rts						; ret
   650 				.endl
   651
   652 2CF5			.local	LONGBI						; FUNCTION
   653
   654 				; optimize OK (MIDFILES), line = 79
   655
   656 2CF5 A9 C7			lda <RESULT
   657 2CF7 8D CB 39			sta RESULTPTR
   658 2CFA A9 39			lda >RESULT
   659 2CFC 8D CC 39			sta RESULTPTR+1
   660
   661 				; optimize OK (MIDFILES), line = 80
   662
   663 2CFF A9 03			lda #$03
   664 2D01 8D CD 39			sta I
   665
   666 2D04			l_0118
   667 				; --- ForToDoCondition
   668
   669 				; optimize OK (MIDFILES), line = 82
   670
   671 2D04 AC C5 39 84 82 AC + 	mwy BI :bp2
   672 2D0E AC CD 39			ldy I
   673 2D11 B1 82			lda (:bp2),y
   674 2D13 AC CC 39 84 81		mvy RESULTPTR+1 :bp+1
   675 2D18 AC CB 39			ldy RESULTPTR
   676 2D1B 91 80			sta (:bp),y
   677
   678 				; optimize FAIL (0, MIDFILES), line = 83
   679
   680 2D1D EE CB 39			inc RESULTPTR
   681 2D20 D0 03			sne
   682 2D22 EE CC 39			inc RESULTPTR+1
   683
   684 				; --- ForToDoEpilog
   685 2D25 CE CD 39			dec I
   686 2D28 10 DA			jpl l_0118
   687 2D2A			l_0126
   688 2D2A			@exit
   689
   690 				; ------------------------------------------------------------
   691
   692 = 39C5			BI	= DATAORIGIN+$0169
   693 = 39C7			RESULT	= DATAORIGIN+$016B
   694 = 39CB			RESULTPTR	= DATAORIGIN+$016F
   695 = 39CD			I	= DATAORIGIN+$0171
   696
   697 = 39C5			@VarData	= BI
   698 = 0005			@VarDataSize	= 5
   699
   700 2D2A 60				rts						; ret
   701 				.endl
   702
   703 2D2B			.local	LOADMID						; FUNCTION
   704
   705 2D2B 4C D6 2D			jmp l_013C
   706
   707 2D2E			.local	READWORDBI					; FUNCTION
   708
   709 				; BlockRead
   710
   711 				; optimize OK (MIDFILES), line = 102
   712
   713 2D2E AC D4 30 84 82 AC + 	mwy F :bp2
   714 2D38 A0 06			ldy #s@file.buffer
   715 2D3A AD 41 36			lda BI
   716 2D3D 91 82			sta (:bp2),y
   717 2D3F C8				iny
   718 2D40 AD 42 36			lda BI+1
   719 2D43 91 82			sta (:bp2),y
   720 2D45 A0 08			ldy #s@file.nrecord
   721 2D47 A9 02			lda #$02
   722 2D49 91 82			sta (:bp2),y
   723 2D4B C8				iny
   724 2D4C A9 00			lda #$00
   725 2D4E 91 82			sta (:bp2),y
   726
   727 2D50 8A 48			txa:pha
   728 2D52 38				sec
   729 					@readfile F, #7
   729 				 LDY F+1\ LDA F\ LDX# 7\ JSR @READFILE
   729 2D53 AC D5 30		 LDY F+1
   729 2D56 AD D4 30		 LDA F
   729 2D59 A2 07		 LDX# 7
   729 2D5B 20 FB 20		 JSR @READFILE
   730 2D5E 68 AA			pla:tax
   731
   732 				; optimize OK (MIDFILES), line = 103
   733
   734 2D60 AD 41 36			lda BI
   735 2D63 8D BF 39			sta WORDBI.BI
   736 2D66 AD 42 36			lda BI+1
   737 2D69 8D C0 39			sta WORDBI.BI+1
   738 2D6C 20 BC 2C			jsr WORDBI
   739 2D6F AD C1 39			lda WORDBI.RESULT
   740 2D72 8D ED 39			sta RESULT
   741 2D75 AD C2 39			lda WORDBI.RESULT+1
   742 2D78 8D EE 39			sta RESULT+1
   743 2D7B			@exit
   744
   745 				; ------------------------------------------------------------
   746
   747 = 39ED			RESULT	= DATAORIGIN+$0191
   748 2D7B 60				rts						; ret
   749 				.endl
   750
   751 2D7C			.local	READLONGBI					; FUNCTION
   752
   753 				; BlockRead
   754
   755 				; optimize OK (MIDFILES), line = 108
   756
   757 2D7C AC D4 30 84 82 AC + 	mwy F :bp2
   758 2D86 A0 06			ldy #s@file.buffer
   759 2D88 AD 41 36			lda BI
   760 2D8B 91 82			sta (:bp2),y
   761 2D8D C8				iny
   762 2D8E AD 42 36			lda BI+1
   763 2D91 91 82			sta (:bp2),y
   764 2D93 A0 08			ldy #s@file.nrecord
   765 2D95 A9 04			lda #$04
   766 2D97 91 82			sta (:bp2),y
   767 2D99 C8				iny
   768 2D9A A9 00			lda #$00
   769 2D9C 91 82			sta (:bp2),y
   770
   771 2D9E 8A 48			txa:pha
   772 2DA0 38				sec
   773 					@readfile F, #7
   773 				 LDY F+1\ LDA F\ LDX# 7\ JSR @READFILE
   773 2DA1 AC D5 30		 LDY F+1
   773 2DA4 AD D4 30		 LDA F
   773 2DA7 A2 07		 LDX# 7
   773 2DA9 20 FB 20		 JSR @READFILE
   774 2DAC 68 AA			pla:tax
   775
   776 				; optimize OK (MIDFILES), line = 109
   777
   778 2DAE AD 41 36			lda BI
   779 2DB1 8D C5 39			sta LONGBI.BI
   780 2DB4 AD 42 36			lda BI+1
   781 2DB7 8D C6 39			sta LONGBI.BI+1
   782 2DBA 20 F5 2C			jsr LONGBI
   783 2DBD AD C7 39			lda LONGBI.RESULT
   784 2DC0 8D EF 39			sta RESULT
   785 2DC3 AD C8 39			lda LONGBI.RESULT+1
   786 2DC6 8D F0 39			sta RESULT+1
   787 2DC9 AD C9 39			lda LONGBI.RESULT+2
   788 2DCC 8D F1 39			sta RESULT+2
   789 2DCF AD CA 39			lda LONGBI.RESULT+3
   790 2DD2 8D F2 39			sta RESULT+3
   791 2DD5			@exit
   792
   793 				; ------------------------------------------------------------
   794
   795 = 39EF			RESULT	= DATAORIGIN+$0193
   796 2DD5 60				rts						; ret
   797 				.endl
   798 2DD6			l_013C
   799
   800 				; optimize OK (MIDFILES), line = 113
   801
   802 2DD6 AD 3F 36			lda MIDTRACKS
   803 2DD9 8D EB 39			sta NTRKREC
   804 2DDC AD 40 36			lda MIDTRACKS+1
   805 2DDF 8D EC 39			sta NTRKREC+1
   806
   807 				; optimize FAIL ('@print', MIDFILES), line = 114
   808
   809 					@printSTRING #CODEORIGIN+$0000
   809 				 LDY> CODEORIGIN+$0000\ LDA< CODEORIGIN+$0000\ JSR @PRINTSTRING
   809 2DE2 A0 20		 LDY> CODEORIGIN+$0000
   809 2DE4 A9 00		 LDA< CODEORIGIN+$0000
   809 2DE6 20 31 2A		 JSR @PRINTSTRING
   810 					@printSTRING FN
   810 				 LDY FN+1\ LDA FN\ JSR @PRINTSTRING
   810 2DE9 AC CF 39		 LDY FN+1
   810 2DEC AD CE 39		 LDA FN
   810 2DEF 20 31 2A		 JSR @PRINTSTRING
   811 2DF2 20 23 2A			@printEOL
   812 				; AssignFile
   813
   814 				; optimize OK (MIDFILES), line = 116
   815
   816 2DF5 AC D4 30 84 82 AC + 	mwy F :bp2
   817 2DFF A0 00			ldy #s@file.pfname
   818 2E01 AD CE 39			lda FN
   819 2E04 91 82			sta (:bp2),y
   820 2E06 C8				iny
   821 2E07 AD CF 39			lda FN+1
   822 2E0A 91 82			sta (:bp2),y
   823 2E0C A0 05			ldy #s@file.status
   824 2E0E A9 00			lda #$00
   825 2E10 91 82			sta (:bp2),y
   826 				; Reset
   827
   828 				; optimize OK (MIDFILES), line = 117
   829
   830 2E12 A0 02			ldy #s@file.record
   831 2E14 A9 01			lda #$01
   832 2E16 91 82			sta (:bp2),y
   833 2E18 C8				iny
   834 2E19 A9 00			lda #$00
   835 2E1B 91 82			sta (:bp2),y
   836
   837 2E1D 8A 48			txa:pha
   838 2E1F 18				clc
   839 					@openfile F, MAIN.SYSTEM.FileMode
   839 				 LDY F+1\ LDA F\ LDX MAIN.SYSTEM.FILEMODE\ JSR @OPENFILE
   839 2E20 AC D5 30		 LDY F+1
   839 2E23 AD D4 30		 LDA F
   839 2E26 AE 61 38		 LDX MAIN.SYSTEM.FILEMODE
   839 2E29 20 38 20		 JSR @OPENFILE
   840 2E2C 68 AA			pla:tax
   841
   842 				; optimize OK (MIDFILES), line = 118
   843
   844 2E2E AD 63 38			lda SYSTEM.IORESULT
   845 2E31 10 2B			jpl l_018F
   846
   847 				; optimize FAIL ('@print', MIDFILES), line = 120
   848
   849 					@print #$9B
   849 				 LDY# $9B\ JSR @PRINT
   849 2E33 A0 9B		 LDY# $9B
   849 2E35 20 28 2A		 JSR @PRINT
   850 					@printSTRING #CODEORIGIN+$000C
   850 				 LDY> CODEORIGIN+$000C\ LDA< CODEORIGIN+$000C\ JSR @PRINTSTRING
   850 2E38 A0 20		 LDY> CODEORIGIN+$000C
   850 2E3A A9 0C		 LDA< CODEORIGIN+$000C
   850 2E3C 20 31 2A		 JSR @PRINTSTRING
   851 2E3F AD 63 38			lda SYSTEM.IORESULT
   852 2E42 20 62 2A			jsr @printBYTE._a
   853 2E45 20 23 2A			@printEOL
   854 				; CloseFile
   855
   856 2E48 8A 48			txa:pha
   857 2E4A 18				clc
   858 					@closefile F
   858 				 LDY F+1\ LDA F\ JSR @CLOSEFILE
   858 2E4B AC D5 30		 LDY F+1
   858 2E4E AD D4 30		 LDA F
   858 2E51 20 CE 20		 JSR @CLOSEFILE
   859 2E54 68 AA			pla:tax
   860
   861 				; optimize OK (MIDFILES), line = 122
   862
   863 2E56 A9 00			lda #$00
   864 2E58 8D D0 39			sta RESULT
   865 2E5B 4C D3 30			jmp @exit					; exit
   866 2E5E			l_018F
   867
   868 				; optimize OK (MIDFILES), line = 124
   869
   870 2E5E A9 00			lda #$00
   871 2E60 8D DD 39			sta TRACKCOUNT
   872 2E63 8D DE 39			sta TRACKCOUNT+1
   873 2E66 8D E5 39			sta DATAPOS
   874 2E69 8D E6 39			sta DATAPOS+1
   875 2E6C A9 FF			lda #$FF
   876 2E6E 8D A3 39			sta NTRACKS
   877 2E71 A9 00			lda #$00
   878 2E73 8D A4 39			sta NTRACKS+1
   879
   880 				; --- WhileProlog
   881 2E76 4C 6C 30			jmp l_01AF
   882 2E79			l_01B0
   883 				; BlockRead
   884
   885 				; optimize OK (MIDFILES), line = 127
   886
   887 2E79 AC D4 30 84 82 AC + 	mwy F :bp2
   888 2E83 A0 06			ldy #s@file.buffer
   889 2E85 A9 DF			lda <CHUNKTAG
   890 2E87 91 82			sta (:bp2),y
   891 2E89 C8				iny
   892 2E8A A9 39			lda >CHUNKTAG
   893 2E8C 91 82			sta (:bp2),y
   894 2E8E A0 08			ldy #s@file.nrecord
   895 2E90 A9 04			lda #$04
   896 2E92 91 82			sta (:bp2),y
   897 2E94 C8				iny
   898 2E95 A9 00			lda #$00
   899 2E97 91 82			sta (:bp2),y
   900 2E99 A0 0A			ldy #s@file.numread
   901 2E9B A9 E3			lda <V
   902 2E9D 91 82			sta (:bp2),y
   903 2E9F C8				iny
   904 2EA0 A9 39			lda >V
   905 2EA2 91 82			sta (:bp2),y
   906
   907 2EA4 8A 48			txa:pha
   908 2EA6 18				clc
   909 					@readfile F, #135
   909 				 LDY F+1\ LDA F\ LDX# 135\ JSR @READFILE
   909 2EA7 AC D5 30		 LDY F+1
   909 2EAA AD D4 30		 LDA F
   909 2EAD A2 87		 LDX# 135
   909 2EAF 20 FB 20		 JSR @READFILE
   910 2EB2 68 AA			pla:tax
   911
   912 				; optimize OK (MIDFILES), line = 128
   913
   914 2EB4 AD E4 39			lda V+1
   915 2EB7 D0 05			bne @+
   916 2EB9 AD E3 39			lda V
   917 2EBC C9 04			cmp #$04
   918 				@
   919 2EBE F0 03			jeq l_01CD
   920 2EC0 4C C0 30			jmp b_01B0					; break
   921 2EC3			l_01CD
   922
   923 				; optimize FAIL ('READLONGBI', MIDFILES), line = 129
   924
   925 2EC3 20 7C 2D			jsr READLONGBI
   926 2EC6 AD EF 39			lda READLONGBI.RESULT
   927 2EC9 8D E7 39			sta LEN
   928 2ECC AD F0 39			lda READLONGBI.RESULT+1
   929 2ECF 8D E8 39			sta LEN+1
   930 2ED2 AD F1 39			lda READLONGBI.RESULT+2
   931 2ED5 8D E9 39			sta LEN+2
   932 2ED8 AD F2 39			lda READLONGBI.RESULT+3
   933 2EDB 8D EA 39			sta LEN+3
   934
   935 				; optimize OK (MIDFILES), line = 130
   936
   937 2EDE AD E2 39			lda CHUNKTAG+3
   938 2EE1 49 64			eor #$64
   939 2EE3 F0 03 4C 84 2F		jne l_01E4
   940 2EE8 AD E1 39			lda CHUNKTAG+2
   941 2EEB 49 68			eor #$68
   942 2EED F0 03 4C 84 2F		jne l_01E4
   943 2EF2 AD E0 39			lda CHUNKTAG+1
   944 2EF5 49 54			eor #$54
   945 2EF7 F0 03 4C 84 2F		jne l_01E4
   946 2EFC AD DF 39			lda CHUNKTAG
   947 2EFF 49 4D			eor #$4D
   948 2F01 F0 03 4C 84 2F		jne l_01E4
   949
   950 				; optimize FAIL ('READWORDBI', MIDFILES), line = 132
   951
   952 2F06 20 2E 2D			jsr READWORDBI
   953 2F09 AD ED 39			lda READWORDBI.RESULT
   954 2F0C 8D A1 39			sta FORMAT
   955 2F0F AD EE 39			lda READWORDBI.RESULT+1
   956 2F12 8D A2 39			sta FORMAT+1
   957
   958 				; optimize FAIL ('READWORDBI', MIDFILES), line = 133
   959
   960 2F15 20 2E 2D			jsr READWORDBI
   961 2F18 AD ED 39			lda READWORDBI.RESULT
   962 2F1B 8D A3 39			sta NTRACKS
   963 2F1E AD EE 39			lda READWORDBI.RESULT+1
   964 2F21 8D A4 39			sta NTRACKS+1
   965
   966 				; optimize FAIL ('READWORDBI', MIDFILES), line = 134
   967
   968 2F24 20 2E 2D			jsr READWORDBI
   969 2F27 AD ED 39			lda READWORDBI.RESULT
   970 2F2A 8D E3 39			sta V
   971 2F2D AD EE 39			lda READWORDBI.RESULT+1
   972 2F30 8D E4 39			sta V+1
   973
   974 				; optimize OK (MIDFILES), line = 135
   975
   976 2F33 10 3E			jpl l_0206
   977
   978 				; optimize OK (MIDFILES), line = 137
   979
   980 2F35 29 7F			and #$7F
   981 2F37 8D A5 39			sta FPS
   982
   983 				; optimize OK (MIDFILES), line = 138
   984
   985 2F3A 8D F3 39			sta @CASETMP_0003
   986 2F3D C9 E8			cmp #$E8
   987 2F3F D0 08			jne l_021F
   988 				@
   989
   990 				; optimize OK (MIDFILES), line = 139
   991
   992 2F41 A9 18			lda #$18
   993 2F43 8D A5 39			sta FPS
   994
   995 2F46 4C 6A 2F			jmp a_0003
   996 2F49			l_021F
   997 2F49 C9 E7			cmp #$E7
   998 2F4B D0 08			jne l_022C
   999 				@
  1000
  1001 				; optimize OK (MIDFILES), line = 140
  1002
  1003 2F4D A9 19			lda #$19
  1004 2F4F 8D A5 39			sta FPS
  1005
  1006 2F52 4C 6A 2F			jmp a_0003
  1007 2F55			l_022C
  1008 2F55 C9 E3			cmp #$E3
  1009 2F57 D0 08			jne l_0239
  1010 				@
  1011
  1012 				; optimize OK (MIDFILES), line = 141
  1013
  1014 2F59 A9 1D			lda #$1D
  1015 2F5B 8D A5 39			sta FPS
  1016
  1017 2F5E 4C 6A 2F			jmp a_0003
  1018 2F61			l_0239
  1019 2F61 C9 E2			cmp #$E2
  1020 2F63 D0 05			jne l_0246
  1021 				@
  1022
  1023 				; optimize OK (MIDFILES), line = 142
  1024
  1025 2F65 A9 1E			lda #$1E
  1026 2F67 8D A5 39			sta FPS
  1027
  1028 2F6A			l_0246
  1029 2F6A			a_0003
  1030
  1031 				; optimize OK (MIDFILES), line = 144
  1032
  1033 2F6A AD E3 39			lda V
  1034 2F6D 8D A6 39			sta FSD
  1035 2F70 4C 81 2F			jmp l_0264
  1036 2F73			l_0206
  1037
  1038 				; optimize OK (MIDFILES), line = 152
  1039
  1040 2F73 AD E3 39			lda V
  1041 2F76 8D A7 39			sta TICKDIV
  1042 2F79 AD E4 39			lda V+1
  1043 2F7C 29 7F			and #$7F
  1044 2F7E 8D A8 39			sta TICKDIV+1
  1045 2F81			l_0264
  1046 2F81 4C 67 30			jmp l_0276
  1047 2F84			l_01E4
  1048
  1049 				; optimize OK (MIDFILES), line = 158
  1050
  1051 2F84 AD E2 39			lda CHUNKTAG+3
  1052 2F87 49 6B			eor #$6B
  1053 2F89 F0 03 4C 67 30		jne l_0286
  1054 2F8E AD E1 39			lda CHUNKTAG+2
  1055 2F91 49 72			eor #$72
  1056 2F93 F0 03 4C 67 30		jne l_0286
  1057 2F98 AD E0 39			lda CHUNKTAG+1
  1058 2F9B 49 54			eor #$54
  1059 2F9D F0 03 4C 67 30		jne l_0286
  1060 2FA2 AD DF 39			lda CHUNKTAG
  1061 2FA5 49 4D			eor #$4D
  1062 2FA7 F0 03 4C 67 30		jne l_0286
  1063
  1064 				; optimize FAIL (0, MIDFILES), line = 160
  1065
  1066 2FAC EE DD 39			inc TRACKCOUNT
  1067 2FAF D0 03			sne
  1068 2FB1 EE DE 39			inc TRACKCOUNT+1
  1069
  1070 				; optimize FAIL ('@print', MIDFILES), line = 161
  1071
  1072 					@printSTRING #CODEORIGIN+$0019
  1072 				 LDY> CODEORIGIN+$0019\ LDA< CODEORIGIN+$0019\ JSR @PRINTSTRING
  1072 2FB4 A0 20		 LDY> CODEORIGIN+$0019
  1072 2FB6 A9 19		 LDA< CODEORIGIN+$0019
  1072 2FB8 20 31 2A		 JSR @PRINTSTRING
  1073 2FBB AD DD 39			lda TRACKCOUNT
  1074 2FBE AC DE 39			ldy TRACKCOUNT+1
  1075 2FC1 20 73 2A			jsr @printWORD._ay
  1076 					@print #$2F
  1076 				 LDY# $2F\ JSR @PRINT
  1076 2FC4 A0 2F		 LDY# $2F
  1076 2FC6 20 28 2A		 JSR @PRINT
  1077 2FC9 AD A3 39			lda NTRACKS
  1078 2FCC AC A4 39			ldy NTRACKS+1
  1079 2FCF 20 73 2A			jsr @printWORD._ay
  1080 					@printSTRING #CODEORIGIN+$0022
  1080 				 LDY> CODEORIGIN+$0022\ LDA< CODEORIGIN+$0022\ JSR @PRINTSTRING
  1080 2FD2 A0 20		 LDY> CODEORIGIN+$0022
  1080 2FD4 A9 22		 LDA< CODEORIGIN+$0022
  1080 2FD6 20 31 2A		 JSR @PRINTSTRING
  1081 				; BlockRead
  1082
  1083 				; optimize OK (MIDFILES), line = 162
  1084
  1085 2FD9 AC D4 30 84 82 AC + 	mwy F :bp2
  1086 2FE3 A0 06			ldy #s@file.buffer
  1087 2FE5 AD 3D 36			lda MIDDATA
  1088 2FE8 18 6D E5 39			add DATAPOS
  1089 2FEC 91 82			sta (:bp2),y
  1090 2FEE C8				iny
  1091 2FEF AD 3E 36			lda MIDDATA+1
  1092 2FF2 6D E6 39			adc DATAPOS+1
  1093 2FF5 91 82			sta (:bp2),y
  1094 2FF7 A0 08			ldy #s@file.nrecord
  1095 2FF9 AD E7 39			lda LEN
  1096 2FFC 91 82			sta (:bp2),y
  1097 2FFE C8				iny
  1098 2FFF AD E8 39			lda LEN+1
  1099 3002 91 82			sta (:bp2),y
  1100
  1101 3004 8A 48			txa:pha
  1102 3006 18				clc
  1103 					@readfile F, #7
  1103 				 LDY F+1\ LDA F\ LDX# 7\ JSR @READFILE
  1103 3007 AC D5 30		 LDY F+1
  1103 300A AD D4 30		 LDA F
  1103 300D A2 07		 LDX# 7
  1103 300F 20 FB 20		 JSR @READFILE
  1104 3012 68 AA			pla:tax
  1105
  1106 				; optimize OK (MIDFILES), line = 163
  1107
  1108 3014 AC EB 39 84 82 AC + 	mwy NTRKREC :bp2
  1109 301E A0 00			ldy #$00
  1110 3020 AD 3D 36			lda MIDDATA
  1111 3023 18 6D E5 39			add DATAPOS
  1112 3027 91 82			sta (:bp2),y
  1113 3029 C8				iny
  1114 302A AD 3E 36			lda MIDDATA+1
  1115 302D 6D E6 39			adc DATAPOS+1
  1116 3030 91 82			sta (:bp2),y
  1117
  1118 				; optimize OK (MIDFILES), line = 164
  1119
  1120 3032 C8				iny
  1121 3033 A9 00			lda #$00
  1122 3035 91 82			sta (:bp2),y
  1123 3037 C8				iny
  1124 3038 91 82			sta (:bp2),y
  1125 303A C8				iny
  1126 303B 91 82			sta (:bp2),y
  1127 303D C8				iny
  1128 303E 91 82			sta (:bp2),y
  1129
  1130 				; optimize OK (MIDFILES), line = 165
  1131
  1132 3040 C8				iny
  1133 3041 91 82			sta (:bp2),y
  1134
  1135 				; optimize OK (MIDFILES), line = 166
  1136
  1137 3043 C8				iny
  1138 3044 91 82			sta (:bp2),y
  1139
  1140 				; optimize OK (MIDFILES), line = 167
  1141
  1142 3046 AD EB 39			lda NTRKREC
  1143 3049 18 69 09			add #$09
  1144 304C 8D EB 39			sta NTRKREC
  1145 304F 90 03			scc
  1146 3051 EE EC 39			inc NTRKREC+1
  1147
  1148 				; optimize OK (MIDFILES), line = 168
  1149
  1150 3054 AD E5 39			lda DATAPOS
  1151 3057 18 6D E7 39			add LEN
  1152 305B 8D E5 39			sta DATAPOS
  1153 305E AD E6 39			lda DATAPOS+1
  1154 3061 6D E8 39			adc LEN+1
  1155 3064 8D E6 39			sta DATAPOS+1
  1156 3067			l_0286
  1157 3067			l_0276
  1158
  1159 				; optimize FAIL ('@print', MIDFILES), line = 170
  1160
  1161 					@print #$9C
  1161 				 LDY# $9C\ JSR @PRINT
  1161 3067 A0 9C		 LDY# $9C
  1161 3069 20 28 2A		 JSR @PRINT
  1162 306C			l_01AF
  1163
  1164 				; optimize FAIL (1, MIDFILES), line = 125
  1165
  1166 306C E8				inx
  1167 306D A0 01			ldy #1
  1168 306F AD 63 38			lda SYSTEM.IORESULT
  1169 3072 C9 80			cmp #$80
  1170 3074 90 01			bcc @+
  1171 3076 88				dey
  1172 				@
  1173 3077 94 94			sty :STACKORIGIN,x
  1174 3079 AD D4 30			lda F
  1175 307C 8D 73 38			sta SYSTEM.EOF.F
  1176 307F AD D5 30			lda F+1
  1177 3082 8D 74 38			sta SYSTEM.EOF.F+1
  1178 3085 20 E4 2B			jsr SYSTEM.EOF
  1179 3088 E8				inx
  1180 3089 AD 75 38 95 94		mva SYSTEM.EOF.RESULT :STACKORIGIN,x
  1181 308E 20 11 23			jsr notBOOLEAN
  1182 3091 20 4C 23			jsr andAL_CL
  1183 3094 AD DD 39 95 94		mva TRACKCOUNT :STACKORIGIN,x
  1184 3099 AD DE 39 95 A4		mva TRACKCOUNT+1 :STACKORIGIN+STACKWIDTH,x
  1185 309E E8				inx
  1186 309F AD A3 39 95 94		mva NTRACKS :STACKORIGIN,x
  1187 30A4 AD A4 39 95 A4		mva NTRACKS+1 :STACKORIGIN+STACKWIDTH,x
  1188 30A9 A0 01			ldy #1
  1189 30AB 20 06 23			jsr cmpEAX_ECX.AX_CX
  1190 30AE 90 01			bcc @+
  1191 30B0 88				dey
  1192 				@
  1193 30B1 94 93			sty :STACKORIGIN-1,x
  1194 30B3 CA				dex
  1195 30B4 20 4C 23			jsr andAL_CL
  1196 30B7 CA				dex
  1197 30B8 CA				dex
  1198 30B9 B5 95			lda :STACKORIGIN+1,x
  1199 30BB F0 03 4C 79 2E		jne l_01B0
  1200 30C0			b_01B0
  1201 				; CloseFile
  1202
  1203 30C0 8A 48			txa:pha
  1204 30C2 18				clc
  1205 					@closefile F
  1205 				 LDY F+1\ LDA F\ JSR @CLOSEFILE
  1205 30C3 AC D5 30		 LDY F+1
  1205 30C6 AD D4 30		 LDA F
  1205 30C9 20 CE 20		 JSR @CLOSEFILE
  1206 30CC 68 AA			pla:tax
  1207
  1208 				; optimize OK (MIDFILES), line = 173
  1209
  1210 30CE A9 01			lda #$01
  1211 30D0 8D D0 39			sta RESULT
  1212 30D3			@exit
  1213
  1214 				; ------------------------------------------------------------
  1215
  1216 = 39CE			FN	= DATAORIGIN+$0172
  1217 = 39D0			RESULT	= DATAORIGIN+$0174
  1218 30D3			.var F	= DATAORIGIN+$0175 .word
  1219 = 39DD			TRACKCOUNT	= DATAORIGIN+$0181
  1220 = 39DF			CHUNKTAG	= DATAORIGIN+$0183
  1221 = 39E3			V	= DATAORIGIN+$0187
  1222 = 39E5			DATAPOS	= DATAORIGIN+$0189
  1223 = 39E7			LEN	= DATAORIGIN+$018B
  1224 = 39EB			NTRKREC	= DATAORIGIN+$018F
  1225 = 385C			NTRKREC.PTR	= DATAORIGIN+$0000
  1226 = 385E			NTRKREC.DELTATIME	= DATAORIGIN+$0002
  1227 = 3862			NTRKREC.SKIPDELTA	= DATAORIGIN+$0006
  1228 = 3863			NTRKREC.EOT	= DATAORIGIN+$0007
  1229 = 3864			NTRKREC._EVENT	= DATAORIGIN+$0008
  1230 = 39F3			@CASETMP_0003	= DATAORIGIN+$0197
  1231
  1232 = 39CE			@VarData	= FN
  1233 = 001D			@VarDataSize	= 29
  1234
  1235 30D3 60				rts						; ret
  1236 = 30D4 D1 39		F
  1236 				.endl
  1237
  1238 30D6			.local	GETTRACKDATA					; FUNCTION
  1239
  1240 				; ------------------------------------------------------------
  1241
  1242 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  1243 				; as Pointer
  1244 30D6 B5 94			lda :STACKORIGIN,x
  1245 30D8 8D F4 39			sta TRACK
  1246 30DB B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  1247 30DD 8D F5 39			sta TRACK+1
  1248 30E0 CA				dex
  1249 30E1			@main
  1250
  1251 30E1 4C 32 32			jmp l_02E9
  1252
  1253 30E4			.local	GETVARLONG					; FUNCTION
  1254
  1255 				; optimize OK (MIDFILES), line = 188
  1256
  1257 30E4 A9 00			lda #$00
  1258 30E6 8D 11 3A			sta RESULT
  1259 30E9 8D 12 3A			sta RESULT+1
  1260 30EC 8D 13 3A			sta RESULT+2
  1261 30EF 8D 14 3A			sta RESULT+3
  1262
  1263 				; --- RepeatUntilProlog
  1264 30F2			l_02F1
  1265
  1266 				; optimize OK (MIDFILES), line = 190
  1267
  1268 30F2 AC 04 3A 84 82 AC + 	mwy TRACKDATA :bp2
  1269 30FC A0 00			ldy #$00
  1270 30FE B1 82			lda (:bp2),y
  1271 3100 8D 15 3A			sta V
  1272 3103 EE 04 3A			inc TRACKDATA
  1273 3106 D0 03			sne
  1274 3108 EE 05 3A			inc TRACKDATA+1
  1275
  1276 				; optimize OK (MIDFILES), line = 191
  1277
  1278 310B AD 11 3A			lda RESULT
  1279 310E 85 9D			sta :STACKORIGIN+9
  1280 3110 AD 12 3A			lda RESULT+1
  1281 3113 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1282 3115 AD 13 3A			lda RESULT+2
  1283 3118 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  1284 311A AD 14 3A			lda RESULT+3
  1285 311D 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  1286 311F 06 9D			asl :STACKORIGIN+9
  1287 3121 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  1288 3123 26 BD			rol :STACKORIGIN+STACKWIDTH*2+9
  1289 3125 26 CD			rol :STACKORIGIN+STACKWIDTH*3+9
  1290 3127 06 9D			asl :STACKORIGIN+9
  1291 3129 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  1292 312B 26 BD			rol :STACKORIGIN+STACKWIDTH*2+9
  1293 312D 26 CD			rol :STACKORIGIN+STACKWIDTH*3+9
  1294 312F 06 9D			asl :STACKORIGIN+9
  1295 3131 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  1296 3133 26 BD			rol :STACKORIGIN+STACKWIDTH*2+9
  1297 3135 26 CD			rol :STACKORIGIN+STACKWIDTH*3+9
  1298 3137 06 9D			asl :STACKORIGIN+9
  1299 3139 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  1300 313B 26 BD			rol :STACKORIGIN+STACKWIDTH*2+9
  1301 313D 26 CD			rol :STACKORIGIN+STACKWIDTH*3+9
  1302 313F 06 9D			asl :STACKORIGIN+9
  1303 3141 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  1304 3143 26 BD			rol :STACKORIGIN+STACKWIDTH*2+9
  1305 3145 26 CD			rol :STACKORIGIN+STACKWIDTH*3+9
  1306 3147 06 9D			asl :STACKORIGIN+9
  1307 3149 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  1308 314B 26 BD			rol :STACKORIGIN+STACKWIDTH*2+9
  1309 314D 26 CD			rol :STACKORIGIN+STACKWIDTH*3+9
  1310 314F 06 9D			asl :STACKORIGIN+9
  1311 3151 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  1312 3153 26 BD			rol :STACKORIGIN+STACKWIDTH*2+9
  1313 3155 26 CD			rol :STACKORIGIN+STACKWIDTH*3+9
  1314 3157 A5 9D			lda :STACKORIGIN+9
  1315 3159 8D 11 3A			sta RESULT
  1316 315C A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  1317 315E 8D 12 3A			sta RESULT+1
  1318 3161 A5 BD			lda :STACKORIGIN+STACKWIDTH*2+9
  1319 3163 8D 13 3A			sta RESULT+2
  1320 3166 A5 CD			lda :STACKORIGIN+STACKWIDTH*3+9
  1321 3168 8D 14 3A			sta RESULT+3
  1322
  1323 				; optimize OK (MIDFILES), line = 192
  1324
  1325 316B AD 15 3A			lda V
  1326 316E 29 7F			and #$7F
  1327 3170 0D 11 3A			ora RESULT
  1328 3173 8D 11 3A			sta RESULT
  1329
  1330 				; optimize OK (MIDFILES), line = 193
  1331
  1332 3176 AD 15 3A			lda V
  1333 3179 10 03 4C F2 30		jmi l_02F1
  1334 317E			@exit
  1335
  1336 				; ------------------------------------------------------------
  1337
  1338 = 3A11			RESULT	= DATAORIGIN+$01B5
  1339 = 3A15			V	= DATAORIGIN+$01B9
  1340
  1341 = 3A15			@VarData	= V
  1342 = 0001			@VarDataSize	= 1
  1343
  1344 317E 60				rts						; ret
  1345 				.endl
  1346
  1347 317F			.local	GETBYTE						; FUNCTION
  1348
  1349 				; optimize OK (MIDFILES), line = 198
  1350
  1351 317F AC 04 3A 84 82 AC + 	mwy TRACKDATA :bp2
  1352 3189 A0 00			ldy #$00
  1353 318B B1 82			lda (:bp2),y
  1354 318D 8D 16 3A			sta RESULT
  1355 3190 EE 04 3A			inc TRACKDATA
  1356 3193 D0 03			sne
  1357 3195 EE 05 3A			inc TRACKDATA+1
  1358 3198			@exit
  1359
  1360 				; ------------------------------------------------------------
  1361
  1362 = 3A16			RESULT	= DATAORIGIN+$01BA
  1363 3198 60				rts						; ret
  1364 				.endl
  1365
  1366 3199			.local	GET24BITVAL					; FUNCTION
  1367
  1368 				; optimize OK (MIDFILES), line = 207
  1369
  1370 3199 A9 17			lda <RESULT
  1371 319B 8D 1B 3A			sta RESULTPTR
  1372 319E A9 3A			lda >RESULT
  1373 31A0 8D 1C 3A			sta RESULTPTR+1
  1374
  1375 				; optimize OK (MIDFILES), line = 208
  1376
  1377 31A3 AC 04 3A 84 82 AC + 	mwy TRACKDATA :bp2
  1378 31AD A0 00			ldy #$00
  1379 31AF B1 82			lda (:bp2),y
  1380 31B1 8D 1D 3A			sta A
  1381 31B4 EE 04 3A			inc TRACKDATA
  1382 31B7 D0 03			sne
  1383 31B9 EE 05 3A			inc TRACKDATA+1
  1384
  1385 				; optimize OK (MIDFILES), line = 209
  1386
  1387 31BC AC 04 3A 84 82 AC + 	mwy TRACKDATA :bp2
  1388 31C6 A0 00			ldy #$00
  1389 31C8 B1 82			lda (:bp2),y
  1390 31CA 8D 1E 3A			sta B
  1391 31CD EE 04 3A			inc TRACKDATA
  1392 31D0 D0 03			sne
  1393 31D2 EE 05 3A			inc TRACKDATA+1
  1394
  1395 				; optimize OK (MIDFILES), line = 210
  1396
  1397 31D5 AC 04 3A 84 82 AC + 	mwy TRACKDATA :bp2
  1398 31DF A0 00			ldy #$00
  1399 31E1 B1 82			lda (:bp2),y
  1400 31E3 8D 1F 3A			sta C
  1401 31E6 EE 04 3A			inc TRACKDATA
  1402 31E9 D0 03			sne
  1403 31EB EE 05 3A			inc TRACKDATA+1
  1404
  1405 				; optimize OK (MIDFILES), line = 211
  1406
  1407 31EE AC 1B 3A 84 82 AC + 	mwy RESULTPTR :bp2
  1408 31F8 A0 00			ldy #$00
  1409 31FA AD 1F 3A			lda C
  1410 31FD 91 82			sta (:bp2),y
  1411
  1412 				; optimize FAIL (0, MIDFILES), line = 212
  1413
  1414 31FF EE 1B 3A			inc RESULTPTR
  1415 3202 D0 03			sne
  1416 3204 EE 1C 3A			inc RESULTPTR+1
  1417 3207 AC 1B 3A 84 82 AC + 	mwy RESULTPTR :bp2
  1418 3211 A0 00			ldy #$00
  1419 3213 AD 1E 3A			lda B
  1420 3216 91 82			sta (:bp2),y
  1421
  1422 				; optimize FAIL (0, MIDFILES), line = 213
  1423
  1424 3218 EE 1B 3A			inc RESULTPTR
  1425 321B D0 03			sne
  1426 321D EE 1C 3A			inc RESULTPTR+1
  1427 3220 AC 1B 3A 84 82 AC + 	mwy RESULTPTR :bp2
  1428 322A A0 00			ldy #$00
  1429 322C AD 1D 3A			lda A
  1430 322F 91 82			sta (:bp2),y
  1431 3231			@exit
  1432
  1433 				; ------------------------------------------------------------
  1434
  1435 = 3A17			RESULT	= DATAORIGIN+$01BB
  1436 = 3A1B			RESULTPTR	= DATAORIGIN+$01BF
  1437 = 3A1D			A	= DATAORIGIN+$01C1
  1438 = 3A1E			B	= DATAORIGIN+$01C2
  1439 = 3A1F			C	= DATAORIGIN+$01C3
  1440
  1441 = 3A1B			@VarData	= RESULTPTR
  1442 = 0005			@VarDataSize	= 5
  1443
  1444 3231 60				rts						; ret
  1445 				.endl
  1446 3232			l_02E9
  1447
  1448 				; optimize OK (MIDFILES), line = 217
  1449
  1450 3232 AC F4 39 84 82 AC + 	mwy TRACK :bp2
  1451 323C A0 00			ldy #$00
  1452 323E B1 82			lda (:bp2),y
  1453 3240 8D 04 3A			sta TRACKDATA
  1454 3243 C8				iny
  1455 3244 B1 82			lda (:bp2),y
  1456 3246 8D 05 3A			sta TRACKDATA+1
  1457
  1458 				; optimize OK (MIDFILES), line = 218
  1459
  1460 3249 A0 08			ldy #$08
  1461 324B B1 82			lda (:bp2),y
  1462 324D 8D 10 3A			sta EVENT
  1463
  1464 				; --- RepeatUntilProlog
  1465 3250			l_037D
  1466
  1467 				; optimize OK (MIDFILES), line = 220
  1468
  1469 3250 AC F4 39 84 82 AC + 	mwy TRACK :bp2
  1470 325A A0 06			ldy #$06
  1471 325C B1 82			lda (:bp2),y
  1472 325E D0 2E			jne l_038C
  1473
  1474 				; optimize FAIL ('GETVARLONG', MIDFILES), line = 222
  1475
  1476 3260 20 E4 30			jsr GETVARLONG
  1477 3263 AD 11 3A			lda GETVARLONG.RESULT
  1478 3266 8D 07 3A			sta DELTATIME
  1479 3269 AD 12 3A			lda GETVARLONG.RESULT+1
  1480 326C 8D 08 3A			sta DELTATIME+1
  1481 326F AD 13 3A			lda GETVARLONG.RESULT+2
  1482 3272 8D 09 3A			sta DELTATIME+2
  1483 3275 AD 14 3A			lda GETVARLONG.RESULT+3
  1484 3278 8D 0A 3A			sta DELTATIME+3
  1485
  1486 				; optimize OK (MIDFILES), line = 223
  1487
  1488 327B 30 0E			jmi l_03A1
  1489 327D 0D 09 3A			ora DELTATIME+2
  1490 3280 0D 08 3A			ora DELTATIME+1
  1491 3283 0D 07 3A			ora DELTATIME
  1492 3286 F0 03			jeq l_03A1
  1493 3288 4C 5A 34			jmp b_037D					; break
  1494 328B			l_03A1
  1495 328B 4C 9E 32			jmp l_03AD
  1496 328E			l_038C
  1497
  1498 				; optimize OK (MIDFILES), line = 227
  1499
  1500 328E AC F4 39 84 82 AC + 	mwy TRACK :bp2
  1501 3298 A0 06			ldy #$06
  1502 329A A9 00			lda #$00
  1503 329C 91 82			sta (:bp2),y
  1504 329E			l_03AD
  1505
  1506 				; optimize OK (MIDFILES), line = 229
  1507
  1508 329E AC 04 3A 84 82 AC + 	mwy TRACKDATA :bp2
  1509 32A8 A0 00			ldy #$00
  1510 32AA B1 82			lda (:bp2),y
  1511 32AC 10 09			jpl l_03C7
  1512
  1513 				; optimize FAIL ('GETBYTE', MIDFILES), line = 230
  1514
  1515 32AE 20 7F 31			jsr GETBYTE
  1516 32B1 AD 16 3A			lda GETBYTE.RESULT
  1517 32B4 8D 10 3A			sta EVENT
  1518 32B7			l_03C7
  1519
  1520 				; optimize OK (MIDFILES), line = 232
  1521
  1522 32B7 AD 10 3A			lda EVENT
  1523 32BA 8D 20 3A			sta @CASETMP_0004
  1524 32BD 18				clc						; clear carry for add
  1525 32BE 69 40			adc #$FF-$BF					; make m = $FF
  1526 32C0 69 40			adc #$BF-$80+1					; carry set if in range n to m
  1527 32C2 B0 0A			bcs @+
  1528 32C4 AD 20 3A			lda @CASETMP_0004
  1529 32C7 18				clc						; clear carry for add
  1530 32C8 69 10			adc #$FF-$EF					; make m = $FF
  1531 32CA 69 10			adc #$EF-$E0+1					; carry set if in range n to m
  1532 32CC 90 1B			jcc l_03DB
  1533 				@
  1534
  1535 				; optimize OK (MIDFILES), line = 241
  1536
  1537 32CE AD 10 3A			lda EVENT
  1538 32D1 20 AB 2C			jsr MC6850.MC6850_SEND
  1539
  1540 				; optimize FAIL ('GETBYTE', MIDFILES), line = 242
  1541
  1542 32D4 20 7F 31			jsr GETBYTE
  1543 32D7 AD 16 3A			lda GETBYTE.RESULT
  1544 32DA 20 AB 2C			jsr MC6850.MC6850_SEND
  1545
  1546 				; optimize FAIL ('GETBYTE', MIDFILES), line = 243
  1547
  1548 32DD 20 7F 31			jsr GETBYTE
  1549 32E0 AD 16 3A			lda GETBYTE.RESULT
  1550 32E3 20 AB 2C			jsr MC6850.MC6850_SEND
  1551
  1552 32E6 4C 47 34			jmp a_0004
  1553 32E9			l_03DB
  1554 32E9 AD 20 3A			lda @CASETMP_0004
  1555 32EC 18				clc						; clear carry for add
  1556 32ED 69 20			adc #$FF-$DF					; make m = $FF
  1557 32EF 69 20			adc #$DF-$C0+1					; carry set if in range n to m
  1558 32F1 90 12			jcc l_03EC
  1559 				@
  1560
  1561 				; optimize OK (MIDFILES), line = 252
  1562
  1563 32F3 AD 10 3A			lda EVENT
  1564 32F6 20 AB 2C			jsr MC6850.MC6850_SEND
  1565
  1566 				; optimize FAIL ('GETBYTE', MIDFILES), line = 253
  1567
  1568 32F9 20 7F 31			jsr GETBYTE
  1569 32FC AD 16 3A			lda GETBYTE.RESULT
  1570 32FF 20 AB 2C			jsr MC6850.MC6850_SEND
  1571
  1572 3302 4C 47 34			jmp a_0004
  1573 3305			l_03EC
  1574 3305 AD 20 3A			lda @CASETMP_0004
  1575 3308 18				clc						; clear carry for add
  1576 3309 69 08			adc #$FF-$F7					; make m = $FF
  1577 330B 69 08			adc #$F7-$F0+1					; carry set if in range n to m
  1578 330D 90 72			jcc l_03FB
  1579 				@
  1580
  1581 				; optimize FAIL ('GETVARLONG', MIDFILES), line = 258
  1582
  1583 330F 20 E4 30			jsr GETVARLONG
  1584 3312 AD 11 3A			lda GETVARLONG.RESULT
  1585 3315 8D 0B 3A			sta MSGLEN
  1586 3318 AD 12 3A			lda GETVARLONG.RESULT+1
  1587 331B 8D 0C 3A			sta MSGLEN+1
  1588 331E AD 13 3A			lda GETVARLONG.RESULT+2
  1589 3321 8D 0D 3A			sta MSGLEN+2
  1590 3324 AD 14 3A			lda GETVARLONG.RESULT+3
  1591 3327 8D 0E 3A			sta MSGLEN+3
  1592
  1593 				; optimize OK (MIDFILES), line = 262
  1594
  1595 332A AD 10 3A			lda EVENT
  1596 332D 20 AB 2C			jsr MC6850.MC6850_SEND
  1597
  1598 				; --- WhileProlog
  1599 3330 4C 5A 33			jmp l_0405
  1600 3333			l_0406
  1601
  1602 				; optimize FAIL ('GETBYTE', MIDFILES), line = 266
  1603
  1604 3333 20 7F 31			jsr GETBYTE
  1605 3336 AD 16 3A			lda GETBYTE.RESULT
  1606 3339 8D 0F 3A			sta V
  1607
  1608 				; optimize OK (MIDFILES), line = 270
  1609
  1610 333C 20 AB 2C			jsr MC6850.MC6850_SEND
  1611
  1612 				; optimize FAIL (0, MIDFILES), line = 272
  1613
  1614 333F AD 0B 3A D0 13 AD + 	ded MSGLEN
  1615 335A			l_0405
  1616
  1617 				; optimize OK (MIDFILES), line = 264
  1618
  1619 335A AD 0E 3A			lda MSGLEN+3
  1620 335D 30 0B			bmi @+
  1621 335F 0D 0D 3A			ora MSGLEN+2
  1622 3362 0D 0C 3A			ora MSGLEN+1
  1623 3365 0D 0B 3A			ora MSGLEN
  1624 3368 D0 C9			jne l_0406
  1625 				@
  1626
  1627 				; optimize OK (MIDFILES), line = 274
  1628
  1629 336A AD 0F 3A			lda V
  1630 336D C9 F7			cmp #$F7
  1631 336F D0 08			jne l_042F
  1632 3371 A9 00			lda #$00
  1633 3373 8D 06 3A			sta FLAGSYSEX
  1634 3376 4C 7E 33			jmp l_043D
  1635 3379			l_042F
  1636 3379 A9 01			lda #$01
  1637 337B 8D 06 3A			sta FLAGSYSEX
  1638 337E			l_043D
  1639
  1640 337E 4C 47 34			jmp a_0004
  1641 3381			l_03FB
  1642 3381 AD 20 3A			lda @CASETMP_0004
  1643 3384 C9 FF			cmp #$FF
  1644 3386 F0 03 4C 47 34		jne l_044A
  1645 				@
  1646
  1647 				; optimize FAIL ('GETBYTE', MIDFILES), line = 278
  1648
  1649 338B 20 7F 31			jsr GETBYTE
  1650 338E AD 16 3A			lda GETBYTE.RESULT
  1651 3391 8D 10 3A			sta EVENT
  1652
  1653 				; optimize FAIL ('GETVARLONG', MIDFILES), line = 279
  1654
  1655 3394 20 E4 30			jsr GETVARLONG
  1656 3397 AD 11 3A			lda GETVARLONG.RESULT
  1657 339A 8D 0B 3A			sta MSGLEN
  1658 339D AD 12 3A			lda GETVARLONG.RESULT+1
  1659 33A0 8D 0C 3A			sta MSGLEN+1
  1660 33A3 AD 13 3A			lda GETVARLONG.RESULT+2
  1661 33A6 8D 0D 3A			sta MSGLEN+2
  1662 33A9 AD 14 3A			lda GETVARLONG.RESULT+3
  1663 33AC 8D 0E 3A			sta MSGLEN+3
  1664
  1665 				; optimize OK (MIDFILES), line = 280
  1666
  1667 33AF AD 10 3A			lda EVENT
  1668 33B2 8D 21 3A			sta @CASETMP_0005
  1669 33B5 C9 2F			cmp #$2F
  1670 33B7 D0 13			jne l_045D
  1671 				@
  1672
  1673 				; optimize OK (MIDFILES), line = 282
  1674
  1675 33B9 AC F4 39 84 82 AC + 	mwy TRACK :bp2
  1676 33C3 A0 07			ldy #$07
  1677 33C5 A9 01			lda #$01
  1678 33C7 91 82			sta (:bp2),y
  1679
  1680 33C9 4C 47 34			jmp a_0005
  1681 33CC			l_045D
  1682 33CC C9 51			cmp #$51
  1683 33CE D0 39			jne l_046A
  1684 				@
  1685
  1686 				; optimize FAIL ('GET24BITVAL', MIDFILES), line = 285
  1687
  1688 33D0 20 99 31			jsr GET24BITVAL
  1689 33D3 AD 17 3A			lda GET24BITVAL.RESULT
  1690 33D6 8D AD 39			sta MS_PER_QNOTE
  1691 33D9 AD 18 3A			lda GET24BITVAL.RESULT+1
  1692 33DC 8D AE 39			sta MS_PER_QNOTE+1
  1693 33DF AD 19 3A			lda GET24BITVAL.RESULT+2
  1694 33E2 8D AF 39			sta MS_PER_QNOTE+2
  1695 33E5 AD 1A 3A			lda GET24BITVAL.RESULT+3
  1696 33E8 8D B0 39			sta MS_PER_QNOTE+3
  1697
  1698 				; optimize OK (MIDFILES), line = 286
  1699
  1700 33EB AD AD 39			lda MS_PER_QNOTE
  1701 33EE 8D 22 3A			sta SETTEMPO.NTEMPO
  1702 33F1 AD AE 39			lda MS_PER_QNOTE+1
  1703 33F4 8D 23 3A			sta SETTEMPO.NTEMPO+1
  1704 33F7 AD AF 39			lda MS_PER_QNOTE+2
  1705 33FA 8D 24 3A			sta SETTEMPO.NTEMPO+2
  1706 33FD AD B0 39			lda MS_PER_QNOTE+3
  1707 3400 8D 25 3A			sta SETTEMPO.NTEMPO+3
  1708 3403 20 BF 34			jsr SETTEMPO
  1709
  1710 3406 4C 47 34			jmp a_0005
  1711 3409			l_046A
  1712 3409 C9 58			cmp #$58
  1713 340B D0 27			jne l_0479
  1714 				@
  1715
  1716 				; optimize FAIL ('GETBYTE', MIDFILES), line = 290
  1717
  1718 340D 20 7F 31			jsr GETBYTE
  1719 3410 AD 16 3A			lda GETBYTE.RESULT
  1720 3413 8D B1 39			sta TACTNUM
  1721
  1722 				; optimize FAIL ('GETBYTE', MIDFILES), line = 291
  1723
  1724 3416 20 7F 31			jsr GETBYTE
  1725 3419 AD 16 3A			lda GETBYTE.RESULT
  1726 341C 8D B2 39			sta TACTDENUM
  1727
  1728 				; optimize FAIL ('GETBYTE', MIDFILES), line = 292
  1729
  1730 341F 20 7F 31			jsr GETBYTE
  1731 3422 AD 16 3A			lda GETBYTE.RESULT
  1732 3425 8D B3 39			sta TICKS_PER_QNOTE
  1733
  1734 				; optimize FAIL ('GETBYTE', MIDFILES), line = 293
  1735
  1736 3428 20 7F 31			jsr GETBYTE
  1737 342B AD 16 3A			lda GETBYTE.RESULT
  1738 342E 8D B4 39			sta TICKS_PER_32ND
  1739
  1740 3431 4C 47 34			jmp a_0005
  1741 3434			l_0479
  1742
  1743 				; optimize OK (MIDFILES), line = 297
  1744
  1745 3434 AD 04 3A			lda TRACKDATA
  1746 3437 18 6D 0B 3A			add MSGLEN
  1747 343B 8D 04 3A			sta TRACKDATA
  1748 343E AD 05 3A			lda TRACKDATA+1
  1749 3441 6D 0C 3A			adc MSGLEN+1
  1750 3444 8D 05 3A			sta TRACKDATA+1
  1751 3447			a_0005
  1752
  1753 3447			l_044A
  1754 3447			a_0004
  1755
  1756 				; optimize OK (MIDFILES), line = 301
  1757
  1758 3447 AC F4 39 84 82 AC + 	mwy TRACK :bp2
  1759 3451 A0 07			ldy #$07
  1760 3453 B1 82			lda (:bp2),y
  1761 3455 D0 03 4C 50 32		jeq l_037D
  1762 345A			b_037D
  1763
  1764 				; optimize OK (MIDFILES), line = 302
  1765
  1766 345A AC F4 39 84 82 AC + 	mwy TRACK :bp2
  1767 3464 A0 00			ldy #$00
  1768 3466 AD 04 3A			lda TRACKDATA
  1769 3469 91 82			sta (:bp2),y
  1770 346B C8				iny
  1771 346C AD 05 3A			lda TRACKDATA+1
  1772 346F 91 82			sta (:bp2),y
  1773
  1774 				; optimize OK (MIDFILES), line = 303
  1775
  1776 3471 A0 06			ldy #$06
  1777 3473 A9 01			lda #$01
  1778 3475 91 82			sta (:bp2),y
  1779
  1780 				; optimize OK (MIDFILES), line = 304
  1781
  1782 3477 A0 08			ldy #$08
  1783 3479 AD 10 3A			lda EVENT
  1784 347C 91 82			sta (:bp2),y
  1785
  1786 				; optimize OK (MIDFILES), line = 305
  1787
  1788 347E AD 07 3A			lda DELTATIME
  1789 3481 8D 00 3A			sta RESULT
  1790 3484 AD 08 3A			lda DELTATIME+1
  1791 3487 8D 01 3A			sta RESULT+1
  1792 348A AD 09 3A			lda DELTATIME+2
  1793 348D 8D 02 3A			sta RESULT+2
  1794 3490 AD 0A 3A			lda DELTATIME+3
  1795 3493 8D 03 3A			sta RESULT+3
  1796 3496			@exit
  1797
  1798 				; ------------------------------------------------------------
  1799
  1800 = 39F4			TRACK	= DATAORIGIN+$0198
  1801 = 3A00			RESULT	= DATAORIGIN+$01A4
  1802 = 3A04			TRACKDATA	= DATAORIGIN+$01A8
  1803 = 3A06			FLAGSYSEX	= DATAORIGIN+$01AA
  1804 = 3A07			DELTATIME	= DATAORIGIN+$01AB
  1805 = 3A0B			MSGLEN	= DATAORIGIN+$01AF
  1806 = 3A0F			V	= DATAORIGIN+$01B3
  1807 = 3A10			EVENT	= DATAORIGIN+$01B4
  1808 = 3A20			@CASETMP_0004	= DATAORIGIN+$01C4
  1809 = 3A21			@CASETMP_0005	= DATAORIGIN+$01C5
  1810
  1811 = 39F4			@VarData	= TRACK
  1812 = 001B			@VarDataSize	= 27
  1813
  1814 3496 60				rts						; ret
  1815 				.endl
  1816
  1817 3497			.local	INT_PLAY					; PROCEDURE | INTERRUPT
  1818
  1819 				; optimize OK (MIDFILES), line = 311
  1820
  1821 3497 AD B9 39			lda _PAUSECOUNT
  1822 349A D0 21			jne l_04C6
  1823
  1824 				; optimize FAIL (0, MIDFILES), line = 313
  1825
  1826 349C EE BA 39			inc _SUBCNT
  1827
  1828 				; optimize OK (MIDFILES), line = 314
  1829
  1830 349F AD BA 39			lda _SUBCNT
  1831 34A2 C9 02			cmp #$02
  1832 34A4 90 17			jcc l_04DD
  1833
  1834 				; optimize OK (MIDFILES), line = 316
  1835
  1836 34A6 A9 00			lda #$00
  1837 34A8 8D BA 39			sta _SUBCNT
  1838
  1839 				; optimize FAIL (0, MIDFILES), line = 317
  1840
  1841 34AB EE A9 39 D0 0D EE + 	ind TOTALTICKS
  1842 34BD			l_04DD
  1843 34BD			l_04C6
  1844
  1845 				; -------------------  ASM Block 00000052  -------------------
  1846
  1847 34BD 68			    pla
  1848 				  
  1849 34BE 40				rti						; ret
  1850 				.endl
  1851
  1852 34BF			.local	SETTEMPO					; PROCEDURE
  1853
  1854 				; optimize OK (MIDFILES), line = 332
  1855
  1856 34BF 78				sei
  1857 34C0 AD B7 39 8D 10 02		mva OLDVEC VTIMR1
  1858 34C6 AD B8 39 8D 11 02		mva OLDVEC+1 VTIMR1+1
  1859 34CC A5 10			lda irqens
  1860 34CE 29 FE			and #$fe
  1861 34D0 85 10			sta irqens
  1862 34D2 8D 0E D2			sta irqen
  1863 34D5 58				cli
  1864
  1865 				; optimize FAIL ('I2F', MIDFILES), line = 334
  1866
  1867 34D6 E8				inx
  1868 34D7 A9 00 95 94			mva #$00 :STACKORIGIN,x
  1869 34DB A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1870 34DF A9 80 95 B4			mva #$80 :STACKORIGIN+STACKWIDTH*2,x
  1871 34E3 A9 3F 95 C4			mva #$3F :STACKORIGIN+STACKWIDTH*3,x
  1872 34E7 E8				inx
  1873 34E8 AD 22 3A 95 94		mva NTEMPO :STACKORIGIN,x
  1874 34ED AD 23 3A 95 A4		mva NTEMPO+1 :STACKORIGIN+STACKWIDTH,x
  1875 34F2 AD 24 3A 95 B4		mva NTEMPO+2 :STACKORIGIN+STACKWIDTH*2,x
  1876 34F7 AD 25 3A 95 C4		mva NTEMPO+3 :STACKORIGIN+STACKWIDTH*3,x
  1877 34FC E8				inx
  1878 34FD AD A7 39 95 94		mva TICKDIV :STACKORIGIN,x
  1879 3502 AD A8 39 95 A4		mva TICKDIV+1 :STACKORIGIN+STACKWIDTH,x
  1880 3507 A9 00 95 B4			mva #$00 :STACKORIGIN+STACKWIDTH*2,x
  1881 350B A9 00 95 C4			mva #$00 :STACKORIGIN+STACKWIDTH*3,x
  1882 350F 20 DC 29			jsr I2F
  1883 3512 20 01 2A			jsr I2F_m
  1884 3515 20 C3 28			jsr FDIV
  1885 3518 A9 00 95 94			mva #$00 :STACKORIGIN,x
  1886 351C A9 24 95 A4			mva #$24 :STACKORIGIN+STACKWIDTH,x
  1887 3520 A9 74 95 B4			mva #$74 :STACKORIGIN+STACKWIDTH*2,x
  1888 3524 A9 49 95 C4			mva #$49 :STACKORIGIN+STACKWIDTH*3,x
  1889 3528 20 C3 28			jsr FDIV
  1890 352B CA				dex
  1891 352C 20 C3 28			jsr FDIV
  1892 352F A9 00 95 94			mva #$00 :STACKORIGIN,x
  1893 3533 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1894 3537 A9 00 95 B4			mva #$00 :STACKORIGIN+STACKWIDTH*2,x
  1895 353B A9 40 95 C4			mva #$40 :STACKORIGIN+STACKWIDTH*3,x
  1896 353F 20 0C 28			jsr FMUL
  1897 3542 CA				dex
  1898 3543 B5 94			lda :STACKORIGIN,x
  1899 3545 8D 26 3A			sta FREQ
  1900 3548 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  1901 354A 8D 27 3A			sta FREQ+1
  1902 354D B5 B4			lda :STACKORIGIN+STACKWIDTH*2,x
  1903 354F 8D 28 3A			sta FREQ+2
  1904 3552 B5 C4			lda :STACKORIGIN+STACKWIDTH*3,x
  1905 3554 8D 29 3A			sta FREQ+3
  1906
  1907 				; optimize FAIL ('I2F_m', MIDFILES), line = 335
  1908
  1909 3557 A9 00 95 94			mva #$00 :STACKORIGIN,x
  1910 355B A9 FA 95 A4			mva #$FA :STACKORIGIN+STACKWIDTH,x
  1911 355F E8				inx
  1912 3560 AD 26 3A 95 94		mva FREQ :STACKORIGIN,x
  1913 3565 AD 27 3A 95 A4		mva FREQ+1 :STACKORIGIN+STACKWIDTH,x
  1914 356A AD 28 3A 95 B4		mva FREQ+2 :STACKORIGIN+STACKWIDTH*2,x
  1915 356F AD 29 3A 95 C4		mva FREQ+3 :STACKORIGIN+STACKWIDTH*3,x
  1916 3574 A9 00 95 B3			mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
  1917 3578 A9 00 95 C3			mva #$00 :STACKORIGIN-1+STACKWIDTH*3,x
  1918 357C 20 01 2A			jsr I2F_m
  1919 357F 20 C3 28			jsr FDIV
  1920 3582 CA				dex
  1921 3583 20 2C 26			jsr FROUND
  1922 3586 20 52 29			jsr F2I
  1923 3589 B5 94			lda :STACKORIGIN,x
  1924 358B 8D 2A 3A			sta _FDIV
  1925
  1926 				; optimize FAIL ('divmulINT.REAL', MIDFILES), line = 336
  1927
  1928 358E A9 00 95 94			mva #$00 :STACKORIGIN,x
  1929 3592 A9 87 95 A4			mva #$87 :STACKORIGIN+STACKWIDTH,x
  1930 3596 A9 93 95 B4			mva #$93 :STACKORIGIN+STACKWIDTH*2,x
  1931 359A A9 03 95 C4			mva #$03 :STACKORIGIN+STACKWIDTH*3,x
  1932 359E E8				inx
  1933 359F AD 22 3A 95 94		mva NTEMPO :STACKORIGIN,x
  1934 35A4 AD 23 3A 95 A4		mva NTEMPO+1 :STACKORIGIN+STACKWIDTH,x
  1935 35A9 AD 24 3A 95 B4		mva NTEMPO+2 :STACKORIGIN+STACKWIDTH*2,x
  1936 35AE AD 25 3A 95 C4		mva NTEMPO+3 :STACKORIGIN+STACKWIDTH*3,x
  1937 35B3 20 53 23			jsr @expandToREAL
  1938 35B6 20 64 23			jsr @expandToREAL1
  1939 35B9 20 00 24			jsr divmulINT.REAL
  1940 35BC CA				dex
  1941 35BD B5 94			lda :STACKORIGIN,x
  1942 35BF 85 84			sta @REAL_ROUND.A
  1943 35C1 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  1944 35C3 85 85			sta @REAL_ROUND.A+1
  1945 35C5 B5 B4			lda :STACKORIGIN+STACKWIDTH*2,x
  1946 35C7 85 86			sta @REAL_ROUND.A+2
  1947 35C9 B5 C4			lda :STACKORIGIN+STACKWIDTH*3,x
  1948 35CB 85 87			sta @REAL_ROUND.A+3
  1949 35CD 20 D4 25			jsr @REAL_ROUND
  1950 35D0 A5 84			lda @REAL_ROUND.RESULT
  1951 35D2 8D B5 39			sta BPM
  1952 35D5 A5 85			lda @REAL_ROUND.RESULT+1
  1953 35D7 8D B6 39			sta BPM+1
  1954 35DA CA				dex
  1955
  1956 				; optimize OK (MIDFILES), line = 337
  1957
  1958 35DB 78				sei
  1959 35DC A9 97 8D 10 02		mva <INT_PLAY VTIMR1
  1960 35E1 A9 34 8D 11 02		mva >INT_PLAY VTIMR1+1
  1961 35E6 A9 00			lda #$00
  1962 35E8 A0 03			ldy #$03
  1963 35EA 8D 08 D2			sta AUDCTL
  1964 35ED 8D 01 D2			sta AUDC1
  1965 35F0 8C 0F D2			sty SKCTL
  1966 35F3 8D 08 D2			sta AUDCTL
  1967 35F6 AD 2A 3A 8D 00 D2		mva _FDIV AUDF1
  1968 35FC A5 10			lda irqens
  1969 35FE 09 01			ora #$01
  1970 3600 85 10			sta irqens
  1971 3602 8D 0E D2			sta irqen
  1972 3605 8D 09 D2			sta stimer
  1973 3608 58				cli
  1974
  1975 				; ------------------------------------------------------------
  1976
  1977 = 3A22			NTEMPO	= DATAORIGIN+$01C6
  1978 = 3A26			FREQ	= DATAORIGIN+$01CA
  1979 = 3A2A			_FDIV	= DATAORIGIN+$01CE
  1980
  1981 = 3A22			@VarData	= NTEMPO
  1982 = 0009			@VarDataSize	= 9
  1983
  1984 3609			@exit
  1985 					.ifdef @new
  1986 					lda <@VarData
  1987 					sta :ztmp
  1988 					lda >@VarData
  1989 					ldy #@VarDataSize-1
  1990 					jmp @FreeMem
  1991 					els
  1992 3609 60				rts						; ret
  1993 					eif
  1994 				.endl
  1995
  1996 				; ------------------------------------------------------------
  1997 				; ------------------------------------------------------------
  1998 360A			@UnitInit
  1999
  2000 				; optimize OK (MIDFILES), line = 341
  2001
  2002 360A A9 04			lda #$04
  2003 360C 8D B1 39			sta TACTNUM
  2004
  2005 				; optimize OK (MIDFILES), line = 342
  2006
  2007 360F 8D B2 39			sta TACTDENUM
  2008
  2009 				; optimize OK (MIDFILES), line = 343
  2010
  2011 3612 A9 18			lda #$18
  2012 3614 8D B3 39			sta TICKS_PER_QNOTE
  2013
  2014 				; optimize OK (MIDFILES), line = 344
  2015
  2016 3617 A9 08			lda #$08
  2017 3619 8D B4 39			sta TICKS_PER_32ND
  2018
  2019 				; optimize OK (MIDFILES), line = 345
  2020
  2021 361C A9 20			lda #$20
  2022 361E 8D AD 39			sta MS_PER_QNOTE
  2023 3621 A9 A1			lda #$A1
  2024 3623 8D AE 39			sta MS_PER_QNOTE+1
  2025 3626 A9 07			lda #$07
  2026 3628 8D AF 39			sta MS_PER_QNOTE+2
  2027 362B A9 00			lda #$00
  2028 362D 8D B0 39			sta MS_PER_QNOTE+3
  2029
  2030 3630 AD 10 02			lda VTIMR1
  2031 3633 8D B7 39			sta OLDVEC
  2032 3636 AD 11 02			lda VTIMR1+1
  2033 3639 8D B8 39			sta OLDVEC+1
  2034
  2035 363C 60				rts
  2036
  2037 				; ------------------------------------------------------------
  2038
  2039 = 0002			FREQ_RATIO	= $02
  2040 = 399F			adr.MIDDATA	= [DATAORIGIN+$0143] .array [1]
  2041 363D			.var MIDDATA	= adr.MIDDATA .word
  2042 = 39A0			adr.MIDTRACKS	= [DATAORIGIN+$0144] .array [1]
  2043 363D			.var MIDTRACKS	= adr.MIDTRACKS .word
  2044 = 39A1			FORMAT	= DATAORIGIN+$0145
  2045 = 39A3			NTRACKS	= DATAORIGIN+$0147
  2046 = 39A5			FPS	= DATAORIGIN+$0149
  2047 = 39A6			FSD	= DATAORIGIN+$014A
  2048 = 39A7			TICKDIV	= DATAORIGIN+$014B
  2049 = 39A9			TOTALTICKS	= DATAORIGIN+$014D
  2050 = 39AD			MS_PER_QNOTE	= DATAORIGIN+$0151
  2051 = 39B1			TACTNUM	= DATAORIGIN+$0155
  2052 = 39B2			TACTDENUM	= DATAORIGIN+$0156
  2053 = 39B3			TICKS_PER_QNOTE	= DATAORIGIN+$0157
  2054 = 39B4			TICKS_PER_32ND	= DATAORIGIN+$0158
  2055 = 39B5			BPM	= DATAORIGIN+$0159
  2056 = 39B7			OLDVEC	= DATAORIGIN+$015B
  2057 = 39B9			_PAUSECOUNT	= DATAORIGIN+$015D
  2058 = 39BA			_SUBCNT	= DATAORIGIN+$015E
  2059 = 6468544D		TAG_MTHD	= $6468544D
  2060 = 6B72544D		TAG_MTRK	= $6B72544D
  2061 = 39BB			adr.BI	= [DATAORIGIN+$015F] .array [4]
  2062 363D			.var BI	= adr.BI .word
  2063 = 0600			adr.RBUF	= $0600
  2064 363D			.var RBUF	= adr.RBUF .word
  2065
  2066 = 363D 9F 39		MIDDATA
  2066 = 363F A0 39		MIDTRACKS
  2066 = 3641 BB 39		BI
  2066 = 3643 00 06		RBUF
  2066 				.endl							; UNIT MIDFILES
  2067 3645			l_003F
  2068
  2069 				; optimize FAIL ('MC6850.MC6850_RESET', MIDICar Player.pas), line = 18
  2070
  2071 3645 20 9E 2C			jsr MC6850.MC6850_RESET
  2072
  2073 				; optimize OK (MIDICar Player.pas), line = 19
  2074
  2075 3648 A9 16			lda #$16
  2076 364A 20 A4 2C			jsr MC6850.MC6850_INIT
  2077
  2078 				; optimize FAIL ('SYSTEM.PARAMCOUNT', MIDICar Player.pas), line = 21
  2079
  2080 364D 20 7A 2C			jsr SYSTEM.PARAMCOUNT
  2081 3650 AD 7A 39			lda SYSTEM.PARAMCOUNT.RESULT
  2082 3653 C9 01			cmp #$01
  2083 3655 D0 14			jne l_0551
  2084 				@
  2085
  2086 				; optimize OK (MIDICar Player.pas), line = 22
  2087
  2088 3657 A9 01			lda #$01
  2089 3659 20 83 2C			jsr SYSTEM.PARAMSTR
  2090 365C AD 98 2C			lda SYSTEM.PARAMSTR.RESULT
  2091 365F 8D 2B 3A			sta FN
  2092 3662 AD 99 2C			lda SYSTEM.PARAMSTR.RESULT+1
  2093 3665 8D 2C 3A			sta FN+1
  2094 3668 4C 75 36			jmp l_0560
  2095 366B			l_0551
  2096
  2097 				; optimize OK (MIDICar Player.pas), line = 24
  2098
  2099 366B A9 27			lda #$27
  2100 366D 8D 2B 3A			sta FN
  2101 3670 A9 20			lda #$20
  2102 3672 8D 2C 3A			sta FN+1
  2103 3675			l_0560
  2104
  2105 				; optimize OK (MIDICar Player.pas), line = 26
  2106
  2107 3675 A9 00			lda #$00
  2108 3677 8D 3F 36			sta MIDFILES.MIDTRACKS
  2109 367A A9 40			lda #$40
  2110 367C 8D 40 36			sta MIDFILES.MIDTRACKS+1
  2111
  2112 				; optimize OK (MIDICar Player.pas), line = 27
  2113
  2114 367F A9 00			lda #$00
  2115 3681 8D 3D 36			sta MIDFILES.MIDDATA
  2116 3684 A9 41			lda #$41
  2117 3686 8D 3E 36			sta MIDFILES.MIDDATA+1
  2118
  2119 				; optimize OK (MIDICar Player.pas), line = 28
  2120
  2121 3689 AD 2B 3A			lda FN
  2122 368C 8D CE 39			sta MIDFILES.LOADMID.FN
  2123 368F AD 2C 3A			lda FN+1
  2124 3692 8D CF 39			sta MIDFILES.LOADMID.FN+1
  2125 3695 20 2B 2D			jsr MIDFILES.LOADMID
  2126 3698 AD D0 39			lda MIDFILES.LOADMID.RESULT
  2127 369B D0 05			jne l_057B
  2128 369D A9 01			lda #$01
  2129 369F 4C 45 38			jmp @halt
  2130 36A2			l_057B
  2131
  2132 				; optimize OK (MIDICar Player.pas), line = 29
  2133
  2134 36A2 A9 00			lda #$00
  2135 36A4 8D A9 39			sta MIDFILES.TOTALTICKS
  2136 36A7 8D AA 39			sta MIDFILES.TOTALTICKS+1
  2137 36AA 8D AB 39			sta MIDFILES.TOTALTICKS+2
  2138 36AD 8D AC 39			sta MIDFILES.TOTALTICKS+3
  2139
  2140 				; optimize OK (MIDICar Player.pas), line = 31
  2141
  2142 36B0 A9 20			lda #$20
  2143 36B2 8D 22 3A			sta MIDFILES.SETTEMPO.NTEMPO
  2144 36B5 A9 A1			lda #$A1
  2145 36B7 8D 23 3A			sta MIDFILES.SETTEMPO.NTEMPO+1
  2146 36BA A9 07			lda #$07
  2147 36BC 8D 24 3A			sta MIDFILES.SETTEMPO.NTEMPO+2
  2148 36BF A9 00			lda #$00
  2149 36C1 8D 25 3A			sta MIDFILES.SETTEMPO.NTEMPO+3
  2150 36C4 20 BF 34			jsr MIDFILES.SETTEMPO
  2151
  2152 				; --- RepeatUntilProlog
  2153 36C7			l_0587
  2154
  2155 				; optimize OK (MIDICar Player.pas), line = 34
  2156
  2157 36C7 AD A3 39			lda MIDFILES.NTRACKS
  2158 36CA 8D 39 3A			sta PLAYINGTRACKS
  2159 36CD A9 00			lda #$00
  2160 36CF 8D 2F 3A			sta CURTRACKOFS
  2161
  2162 				; optimize OK (MIDICar Player.pas), line = 35
  2163
  2164 36D2 8D 38 3A			sta CTRK
  2165 36D5 AC A3 39			ldy MIDFILES.NTRACKS
  2166 36D8 88				dey
  2167 36D9 8C DD 36			sty @FORTMP_059B_0
  2168
  2169 36DC			l_059E
  2170 				; --- ForToDoCondition
  2171 36DC A9 00			lda @FORTMP_059B_0:#$00
  2172 36DE CD 38 3A			cmp CTRK
  2173 36E1 B0 03 4C 26 38		jcc l_05AC
  2174
  2175 				; optimize OK (MIDICar Player.pas), line = 37
  2176
  2177 36E6 AD 3F 36			lda MIDFILES.MIDTRACKS
  2178 36E9 18 6D 2F 3A			add CURTRACKOFS
  2179 36ED 8D 2D 3A			sta TRACK
  2180 36F0 AD 40 36			lda MIDFILES.MIDTRACKS+1
  2181 36F3 69 00			adc #$00
  2182 36F5 8D 2E 3A			sta TRACK+1
  2183
  2184 				; optimize OK (MIDICar Player.pas), line = 38
  2185
  2186 36F8 AD 2F 3A			lda CURTRACKOFS
  2187 36FB 18 69 09			add #$09
  2188 36FE 8D 2F 3A			sta CURTRACKOFS
  2189
  2190 				; optimize OK (MIDICar Player.pas), line = 39
  2191
  2192 3701 AC 2D 3A 84 82 AC + 	mwy TRACK :bp2
  2193 370B A0 07			ldy #$07
  2194 370D B1 82			lda (:bp2),y
  2195 370F F0 03 4C 18 38		jne l_05C2
  2196
  2197 				; optimize OK (MIDICar Player.pas), line = 41
  2198
  2199 3714 A0 02			ldy #$02
  2200 3716 B1 82			lda (:bp2),y
  2201 3718 8D 30 3A			sta TRACKTIME
  2202 371B C8				iny
  2203 371C B1 82			lda (:bp2),y
  2204 371E 8D 31 3A			sta TRACKTIME+1
  2205 3721 C8				iny
  2206 3722 B1 82			lda (:bp2),y
  2207 3724 8D 32 3A			sta TRACKTIME+2
  2208 3727 C8				iny
  2209 3728 B1 82			lda (:bp2),y
  2210 372A 8D 33 3A			sta TRACKTIME+3
  2211
  2212 				; optimize OK (MIDICar Player.pas), line = 42
  2213
  2214 372D				.LOCAL
  2215 372D AD AC 39			lda MIDFILES.TOTALTICKS+3
  2216 3730 38 ED 33 3A			sub TRACKTIME+3
  2217 3734 D0 22			bne L4
  2218 3736 AD AB 39			lda MIDFILES.TOTALTICKS+2
  2219 3739 CD 32 3A			cmp TRACKTIME+2
  2220 373C D0 0E			bne L1
  2221 373E AD AA 39			lda MIDFILES.TOTALTICKS+1
  2222 3741 CD 31 3A			cmp TRACKTIME+1
  2223 3744 D0 06			bne L1
  2224 3746 AD A9 39			lda MIDFILES.TOTALTICKS
  2225 3749 CD 30 3A			cmp TRACKTIME
  2226 374C F0 10		L1	beq L5
  2227 374E B0 04			bcs L3
  2228 3750 A9 FF			lda #$FF
  2229 3752 D0 0A			bne L5
  2230 3754 A9 01		L3	lda #$01
  2231 3756 D0 06			bne L5
  2232 3758 50 04		L4	bvc L5
  2233 375A 49 FF			eor #$FF
  2234 375C 09 01			ora #$01
  2235 375E			L5
  2236 					.ENDL
  2237 375E 10 03 4C 15 38		jmi l_05D7
  2238
  2239 				; optimize OK (MIDICar Player.pas), line = 44
  2240
  2241 3763 A9 01			lda #$01
  2242 3765 8D B9 39			sta MIDFILES._PAUSECOUNT
  2243
  2244 				; optimize OK (MIDICar Player.pas), line = 45
  2245
  2246 3768 AD A9 39			lda MIDFILES.TOTALTICKS
  2247 376B 38 ED 30 3A			sub TRACKTIME
  2248 376F 8D 34 3A			sta DTM
  2249 3772 AD AA 39			lda MIDFILES.TOTALTICKS+1
  2250 3775 ED 31 3A			sbc TRACKTIME+1
  2251 3778 8D 35 3A			sta DTM+1
  2252 377B AD AB 39			lda MIDFILES.TOTALTICKS+2
  2253 377E ED 32 3A			sbc TRACKTIME+2
  2254 3781 8D 36 3A			sta DTM+2
  2255 3784 AD AC 39			lda MIDFILES.TOTALTICKS+3
  2256 3787 ED 33 3A			sbc TRACKTIME+3
  2257 378A 8D 37 3A			sta DTM+3
  2258
  2259 				; optimize FAIL ('MIDFILES.GETTRACKDATA', MIDICar Player.pas), line = 46
  2260
  2261 378D E8				inx
  2262 378E AD 2D 3A 95 94		mva TRACK :STACKORIGIN,x
  2263 3793 AD 2E 3A 95 A4		mva TRACK+1 :STACKORIGIN+STACKWIDTH,x
  2264 3798 20 D6 30			jsr MIDFILES.GETTRACKDATA
  2265 379B AD 00 3A			lda MIDFILES.GETTRACKDATA.RESULT
  2266 379E 8D 30 3A			sta TRACKTIME
  2267 37A1 AD 01 3A			lda MIDFILES.GETTRACKDATA.RESULT+1
  2268 37A4 8D 31 3A			sta TRACKTIME+1
  2269 37A7 AD 02 3A			lda MIDFILES.GETTRACKDATA.RESULT+2
  2270 37AA 8D 32 3A			sta TRACKTIME+2
  2271 37AD AD 03 3A			lda MIDFILES.GETTRACKDATA.RESULT+3
  2272 37B0 8D 33 3A			sta TRACKTIME+3
  2273
  2274 				; optimize OK (MIDICar Player.pas), line = 47
  2275
  2276 37B3 AD A9 39			lda MIDFILES.TOTALTICKS
  2277 37B6 18 6D 30 3A			add TRACKTIME
  2278 37BA 85 9D			sta :STACKORIGIN+9
  2279 37BC AD AA 39			lda MIDFILES.TOTALTICKS+1
  2280 37BF 6D 31 3A			adc TRACKTIME+1
  2281 37C2 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2282 37C4 AD AB 39			lda MIDFILES.TOTALTICKS+2
  2283 37C7 6D 32 3A			adc TRACKTIME+2
  2284 37CA 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  2285 37CC AD AC 39			lda MIDFILES.TOTALTICKS+3
  2286 37CF 6D 33 3A			adc TRACKTIME+3
  2287 37D2 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  2288 37D4 A5 9D			lda :STACKORIGIN+9
  2289 37D6 38 ED 34 3A			sub DTM
  2290 37DA 85 9D			sta :STACKORIGIN+9
  2291 37DC A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2292 37DE ED 35 3A			sbc DTM+1
  2293 37E1 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2294 37E3 A5 BD			lda :STACKORIGIN+STACKWIDTH*2+9
  2295 37E5 ED 36 3A			sbc DTM+2
  2296 37E8 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  2297 37EA A5 CD			lda :STACKORIGIN+STACKWIDTH*3+9
  2298 37EC ED 37 3A			sbc DTM+3
  2299 37EF 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  2300 37F1 AC 2D 3A 84 82 AC + 	mwy TRACK :bp2
  2301 37FB A0 02			ldy #$02
  2302 37FD A5 9D			lda :STACKORIGIN+9
  2303 37FF 91 82			sta (:bp2),y
  2304 3801 C8				iny
  2305 3802 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2306 3804 91 82			sta (:bp2),y
  2307 3806 C8				iny
  2308 3807 A5 BD			lda :STACKORIGIN+STACKWIDTH*2+9
  2309 3809 91 82			sta (:bp2),y
  2310 380B C8				iny
  2311 380C A5 CD			lda :STACKORIGIN+STACKWIDTH*3+9
  2312 380E 91 82			sta (:bp2),y
  2313
  2314 				; optimize OK (MIDICar Player.pas), line = 48
  2315
  2316 3810 A9 00			lda #$00
  2317 3812 8D B9 39			sta MIDFILES._PAUSECOUNT
  2318 3815			l_05D7
  2319 3815 4C 1E 38			jmp l_0605
  2320 3818			l_05C2
  2321
  2322 				; optimize FAIL (0, MIDICar Player.pas), line = 53
  2323
  2324 3818 CE 39 3A			dec PLAYINGTRACKS
  2325 381B 4C 1E 38			jmp c_059E					; continue
  2326 381E			l_0605
  2327
  2328 				; --- ForToDoEpilog
  2329 381E			c_059E
  2330 381E EE 38 3A			inc CTRK
  2331 3821 F0 03 4C DC 36		jne l_059E
  2332 3826			l_05AC
  2333
  2334 				; optimize OK (MIDICar Player.pas), line = 64
  2335
  2336 3826 AD 39 3A			lda PLAYINGTRACKS
  2337 3829 F0 03 4C C7 36		jne l_0587
  2338
  2339 				; optimize OK (MIDICar Player.pas), line = 66
  2340
  2341 382E 78				sei
  2342 382F AD B7 39 8D 10 02		mva MIDFILES.OLDVEC VTIMR1
  2343 3835 AD B8 39 8D 11 02		mva MIDFILES.OLDVEC+1 VTIMR1+1
  2344 383B A5 10			lda irqens
  2345 383D 29 FE			and #$fe
  2346 383F 85 10			sta irqens
  2347 3841 8D 0E D2			sta irqen
  2348 3844 58				cli
  2349
  2350 				; ------------------------------------------------------------
  2351
  2352 = 3A2B			FN	= DATAORIGIN+$01CF
  2353 = 3A2D			TRACK	= DATAORIGIN+$01D1
  2354 = 385C			TRACK.PTR	= DATAORIGIN+$0000
  2355 = 385E			TRACK.DELTATIME	= DATAORIGIN+$0002
  2356 = 3862			TRACK.SKIPDELTA	= DATAORIGIN+$0006
  2357 = 3863			TRACK.EOT	= DATAORIGIN+$0007
  2358 = 3864			TRACK._EVENT	= DATAORIGIN+$0008
  2359 = 3A2F			CURTRACKOFS	= DATAORIGIN+$01D3
  2360 = 3A30			TRACKTIME	= DATAORIGIN+$01D4
  2361 = 3A34			DTM	= DATAORIGIN+$01D8
  2362 = 3A38			CTRK	= DATAORIGIN+$01DC
  2363 = 3A39			PLAYINGTRACKS	= DATAORIGIN+$01DD
  2364 3845			@exit
  2365
  2366 3845 A2 00		@halt	ldx #$00
  2367 3847 9A				txs
  2368 					.ifdef MAIN.@DEFINES.ROMOFF
  2369 					inc portb
  2370 					.fi
  2371
  2372 3848 A0 01			ldy #$01
  2373
  2374 384A 60				rts
  2375
  2376 				; ------------------------------------------------------------
  2377
  2378 384B 00 00 00 00 00 00 + IOCB@COPY	:16 brk
  2379
  2380 				; ------------------------------------------------------------
  2381
  2382 385B			.local	@DEFINES
  2383 385B			ATARI
  2384 				.endl
  2385
  2386 385B			.local	@RESOURCE
  2387 				.endl
  2388
  2389 				.endl							; MAIN
  2390
  2391 				; ------------------------------------------------------------
  2392 				; ------------------------------------------------------------
  2393
  2394 				.macro	UNITINITIALIZATION
  2395 				
  2396 					.ifdef MAIN.SYSTEM.@UnitInit
  2397 					jsr MAIN.SYSTEM.@UnitInit
  2398 					.fi
  2399 				
  2400 					.ifdef MAIN.MC6850.@UnitInit
  2401 					jsr MAIN.MC6850.@UnitInit
  2402 					.fi
  2403 				
  2404 					.ifdef MAIN.MIDFILES.@UnitInit
  2405 					jsr MAIN.MIDFILES.@UnitInit
  2406 					.fi
  2407 				.endm
  2408
  2409 				; ------------------------------------------------------------
  2410
  2411 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2412 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2412 				SYSTEM: $2B36..$2C9D
  2413 					eif
  2414
  2415 					ift .SIZEOF(MAIN.MC6850) > 0
  2416 					.print 'MC6850: ',MAIN.MC6850,'..',MAIN.MC6850+.SIZEOF(MAIN.MC6850)-1
  2416 				MC6850: $2C9E..$2CBB
  2417 					eif
  2418
  2419 					ift .SIZEOF(MAIN.MIDFILES) > 0
  2420 					.print 'MIDFILES: ',MAIN.MIDFILES,'..',MAIN.MIDFILES+.SIZEOF(MAIN.MIDFILES)-1
  2420 				MIDFILES: $2CBC..$3644
  2421 					eif
  2422
  2423 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2423 				CODE: $2000..$385A
  2424
  2425 				; ------------------------------------------------------------
  2426
  2427 385B				.align $0004
  2428
  2429 385C			DATAORIGIN
  2430 385C-3861> 28 00 18 00 + .by  $28 $00 $18 $00 $2D $0C
  2431
  2432 = 0006			VARINITSIZE	= *-DATAORIGIN
  2433 = 01DF			VARDATASIZE	= 479
  2434
  2435 = 3A3B			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2436
  2437 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2437 				DATA: $385C..$3A3B
  2438
  2439 02E0-02E1> FE 2A			run START
  2440
  2441 				; ------------------------------------------------------------
  2442
  2443 				.macro	STATICDATA
  2444 				.by  $0A $4F $70 $65 $6E $20 $66 $69  $6C $65 $20 $00 $0B $49 $2F $4F  $20 $45 $72 $72 $6F $72 $20 $23
  2445 				.by  $00 $07 $54 $72 $61 $63 $6B $3A  $20 $00 $03 $2E $2E $2E $00 $0F  $44 $32 $3A $53 $45 $4C $46 $54
  2446 				.by  $45 $53 $54 $2E $4D $49 $44 $00
  2447 				.endm
  2448
  2449 					end
