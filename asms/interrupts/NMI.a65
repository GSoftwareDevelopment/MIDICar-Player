RTCLOK = $12
ATRACT = 77
DLIV   = $200;
SDLST  = $230;
KBCODE = $d209
SKSTAT = $d20f
DLPTR  = $d402
NMIRES = $d40f

SRTIMR = $022b
KEYDIS = $026d
KEYREP = $02da
KEYDEL = $02f1

    bit NMIRES
    bpl VBL
    jmp (DLIV)

VBL:
// systemowa procedure obs≈Çugi RTClock ($C0E2)
    cld
    sta rega
    stx regx
    sty regy
    STA NMIRES
    lda #0
    sta ATRACT

    lda SDLST
    sta DLPTR
    lda SDLST+1
    sta DLPTR+1

    inc RTCLOK+2
end_rtclk:

skipTHI:
    lda SKSTAT
    and #$04
    beq skip_keyDelay
    lda KEYDEL
    beq skip_keyDelay
    dec KEYDEL

skip_keyDelay:
    lda SRTIMR
    beq end_key

    lda SKSTAT
    and #$04
    bne skip_key

    dec SRTIMR
    bne end_key
    lda KEYREP
    sta SRTIMR

    lda KBCODE
    jsr MAIN.KEYS.keyConv ; this procedure change Y-reg!
    jmp end_key

skip_key:
    lda #$00
    sta SRTIMR

end_key:

; change displaylist interrupt
    lda lstY
    cmp oldLstY
    beq skipDLChange

    sta oldLstY

    ; tax
    ; lda adr.Yscans,x
    ; sta lstYScanLine

    ldy #0
    ldx #26
loop:
    lda DLIST_ADDR,x
    cpy lstY
    bne clearDL
    ora #$80
    bmi store
clearDL:
    and #$7f
store:
    sta DLIST_ADDR,x
next:
    inx
    txa
    and #1
    bne loop
    iny
    cpy #LIST_VISIBLE_ITEMS
    bne loop

skipDLChange:

    lda #<MAIN.MYDLI
    sta DLIV
    lda #>MAIN.MYDLI
    sta DLIV+1

    lda rega:#0
    ldx regx:#0
    ldy regy:#0
