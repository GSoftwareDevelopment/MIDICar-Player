  org $2000

; -----------------
; Driver Jump Table

  .local jumpTable

  jmp driver.init
  jmp driver.start
  jmp driver.send
  jmp driver.flush
  jmp driver.stop
  jmp driver.receive

DESC	dta c'MIDICar Driver 2.1a by GSD',$9B

  .endl

; ----------------------
; Main driver procedures

  .local driver

    icl './atari.hea'
    icl './fifo.hea'
    icl './mc6850.hea'

;--------------------------------------------------
; MC6850 Reset
  .local setMCState

    sta MCBaseState:$D500

    rts
  .endl

;--------------------------------------------------
; Start serial port service

  .local Start
    lda isMCInit
    bne exitStart

    lda #1
    sta isMCInit

    lda #MC6850.MasterReset
    jsr setMCState

;  MC6850_Init(CD_64+WS_OddParity+WS_8bits+WS_2BitStop{+IRQ_Receive});
    lda #(MC6850.CD_64+MC6850.WS_OddParity+MC6850.WS_8bits+MC6850.WS_2BitStop)
    jsr setMCState

; Reset FIFO
    lda #0
    sta fifo_head
    sta fifo_tail

exitStart:
    RTS

  .endl

;--------------------------------------------------
;

  .local Send

    fifo@put

StartSend:
    ldy fifo_tail
    cpy fifo_head
    beq exitSend

; check MC buffer is clear
    lda MCBaseState:$d500 // MC6850.MC6850_CNTRREG
    and #MC6850.TDRE
    beq exitSend

; start transmission by send byte to serial out
    LDA FIFO_BUF,Y
    STA MCBaseBuf:$d500
    inc fifo_tail

exitSend:
    rts

  .endl

;--------------------------------------------------
; Flush buffer
; C = 0 - start send if buffer is not empty and serial is free
; C = 1 -

  .local Flush

    bcs Send.startSend

All:
    sei

    ldy FIFO_Tail
flushLoop:

waitOnMC:
    lda MCBaseState:$d500 // MC6850.MC6850_CNTRReg
    and #MC6850.TDRE
    beq waitOnMc

    cpy FIFO_Head
    beq endFlush

    lda FIFO_BUF,y
    sta MCBaseBuf:$d500   // MC6850.MC6850_BUFFER

    iny
    jmp flushLoop

endFlush:

    sty FIFO_Tail

    cli

    rts
  .endl

;--------------------------------------------------
; Stop serial port service

  .local Stop

    lda isMCInit
    beq exitUnInit

    bcc noFlush
    jsr Flush.All

noFlush:

waitFrame:
    bit VCOUNT
    bmi *-3
    bit VCOUNT
    bpl *-3

    lda #0
    sta isMCInit
    jmp start

exitUnInit:
    RTS

  .endl

;--------------------------------------------------
;

  .local receive
    lda MCBaseState:$d500
    and #1
    bne getReceivedByte
    clc
    rts

  getReceivedByte:
    lda MCBaseBuf:$d501
    sec
    rts
  .endl

;--------------------------------------------------
; driver variables

; old serial out vector
isMCInit    dta b(0)

;--------------------------------------------------
; initialize driver (detect & setup)

  .local init

MCBASE = $82

    lda #<jumpTable.DESC
    ldy #>jumpTable.DESC
    jsr PRINT

    lda MCBASE+1
    bne ForceMCBase
    lda MCBASE
    cmp #100
    bne ForceMCBase

MCdetect:
    jsr detect_MC
    bcs MCNotFound

MCFound:
    sty MCBASE
    stx MCBASE+1

    lda #<MCBASEADDR
    sta A2HEX.msgptr
    lda #>MCBASEADDR
    sta A2HEX.msgptr+1

    lda MCBASE+1
    jsr A2HEX
    lda MCBASE
    jsr A2HEX

    lda #<MIDICAR_EXIST
    ldy #>MIDICAR_EXIST
    jsr PRINT

    sec

    jmp setMCPort

MCNotFound:
    lda #<MIDICAR_NOT_FOUND
    ldy #>MIDICAR_NOT_FOUND
    jsr PRINT

    clc

    rts

ForceMCBase:
    lda #$03
    ldy #0
    sta (MCBASE),y

setMCPort:
    ldy MCBASE
    ldx MCBASE+1

    sty setMCState.MCBaseState
    stx setMCState.MCBaseState+1
    sty Send.MCBaseState
    stx Send.MCBaseState+1
    sty Flush.MCBaseState
    stx Flush.MCBaseState+1
    sty Receive.MCBaseState
    stx Receive.MCBaseState+1

    iny

    sty Send.MCBaseBuf
    stx Send.MCBaseBuf+1
    sty Flush.MCBaseBuf
    stx Flush.MCBaseBuf+1
    sty Receive.MCBaseBuf
    stx Receive.MCBaseBuf+1

    jsr Start
    rts

;--------------------------------------------------
;

    icl './print.a65'
    icl './detect_mc.a65'
    icl '../loader/asm/A2hex.a65'

;--------------------------------------------------
; initialise variables & constants

MIDICAR_EXIST:      dta c'MIDICar detected at $'
MCBASEADDR:         dta c'0000',$9B
MIDICAR_NOT_FOUND:  dta c'Can''t detect MIDICar :(',$9B

  .endl

  .endl

;--------------------------------------------------

  icl 'driver_summary.a65'

