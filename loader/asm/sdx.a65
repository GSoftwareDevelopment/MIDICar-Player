    .local sdx

comtab  = $0A
fsymbol = $07EB

T_      = $F0   ; pointer to SDX T_ symbol
_nbanks = $1D   ; COMTAB offset to free banks of extended memory

; -------------------
; Sparta DOS X Detect
; (c) idea by KMK, code: mikey
;
; $Id: sparta_detect.asm,v 1.2 2006/09/27 22:59:27 mikey Exp $
;

detect:
; if peek($700) = 'S' and bit($701) sets V then we're SDX

    lda $0700
    cmp #$53         ; 'S'
    bne no_sparta
    lda $0701
    cmp #$40
    bcc no_sparta
    cmp #$44
    bcc _oldsdx

; we're running 4.4 - the old method is INVALID as of 4.42

    lda #<sym_t
    ldx #>sym_t
    jsr fsymbol
    sta T_
    stx T_+1
    ldy #$06
    bne _fv

; we're running SDX, find (DOSVEC)-$150

_oldsdx
    lda comtab
    sec
    sbc #<$150
    sta T_
    lda comtab+1
    sbc #>$150
    sta T_+1

; ok, hopefully we have established the address.
; now peek at it. return the value.

    ldy #0
_fv lda (T_),y
    rts

no_sparta
    lda #$ff
    rts

; if A=$FF -> No SDX :(
; if A=$FE -> SDX is in OSROM mode
; if A=$00 -> SDX doesn't use any XMS banks
; if A=anything else -> BANKED mode, and A is the bank number


; --------------------------
; extended RAM detect by SDX

detect_xms:

; incrase T_ pointer to the beginig table of portb calulation

    lda T_
    add #$08-1
    sta T_
    lda T_+1
    adc #$00
    sta T_+1

; get free banks
    ldy #_nbanks
    lda (comtab),y
    add #4
    sta AEXTMEM

; get values of port_b for free banks

    ldx #4

l1  txa
    pha
    lsr
    lsr
    tay
    pla
    and #$03
    asl
    asl
    ora (T_),y

    and #$fe
    sta.w $00fd,x

    inx
    cpx AEXTMEM
    bmi l1

    lda AEXTMEM
    sub #4
    tay

    rts

; -------------------
sym_t
    .byte 'T_      '

    .endl
